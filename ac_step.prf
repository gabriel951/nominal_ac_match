(ac_step
 (input_apply_ac_TCC1 0
  (input_apply_ac_TCC1-1 nil 3884076175 ("" (subtype-tcc) nil nil)
   ((variable type-eq-decl nil term_properties nil)) nil
   (input_apply_ac subtype "ac_step.ac_results_subs"
    "(list_adt[[freshness.fresh_context, unification.unif_prb, substitution.sub]].cons?)")))
 (input_apply_ac_TCC2 0
  (input_apply_ac_TCC2-1 nil 3884076175 ("" (termination-tcc) nil nil)
   ((variable type-eq-decl nil term_properties nil)) nil
   (input_apply_ac termination
    "ac_step.input_apply_ac(list_adt[[freshness.fresh_context, unification.unif_prb, substitution.sub]].cdr(ac_step.ac_results_subs), ac_step.G, ac_step.P, ac_step.sigma, ac_step.V, ac_step.PV)"
    "nil")))
 (input_apply_ac_TCC3 0
  (input_apply_ac_TCC3-1 nil 3884076175 ("" (subtype-tcc) nil nil) nil
   nil
   (input_apply_ac subtype "ac_step.ac_results_subs"
    "(list_adt[[freshness.fresh_context, unification.unif_prb, substitution.sub]].cons?)")))
 (num_size_ac_TCC1 0
  (num_size_ac_TCC1-1 nil 3884076175 ("" (subtype-tcc) nil nil)
   ((size const-decl "nat" unification nil)
    (ac_prb? const-decl "bool" unification nil))
   nil
   (num_size_ac subtype "ac_step.P" "(list_adt[unif_pair].cons?)")))
 (num_size_ac_TCC2 0
  (num_size_ac_TCC2-1 nil 3884076175 ("" (termination-tcc) nil nil)
   ((ac_prb? const-decl "bool" unification nil)
    (size const-decl "nat" unification nil))
   nil
   (num_size_ac termination
    "ac_step.num_size_ac(list_adt[unif_pair].cdr(ac_step.P), ac_step.n)"
    "nil")))
 (num_size_ac_TCC3 0
  (num_size_ac_TCC3-1 nil 3884076175 ("" (subtype-tcc) nil nil)
   ((ac_prb? const-decl "bool" unification nil)
    (size const-decl "nat" unification nil))
   nil
   (num_size_ac subtype "ac_step.P" "(list_adt[unif_pair].cons?)")))
 (num_size_ac_TCC4 0
  (num_size_ac_TCC4-1 nil 3884076175 ("" (termination-tcc) nil nil)
   ((ac_prb? const-decl "bool" unification nil)
    (size const-decl "nat" unification nil))
   nil
   (num_size_ac termination
    "ac_step.num_size_ac(list_adt[unif_pair].cdr(ac_step.P), ac_step.n)"
    "nil")))
 (num_size_ac_TCC5 0
  (num_size_ac_TCC5-1 nil 3884076175 ("" (subtype-tcc) nil nil) nil nil
   (num_size_ac subtype "ac_step.P" "(list_adt[unif_pair].cons?)")))
 (max_size_TCC1 0
  (max_size_TCC1-1 nil 3884447178 ("" (termination-tcc) nil nil) nil
   nil
   (max_size termination
    "ac_step.max_size(list_adt[unif_pair].cdr(ac_step.P))" "nil")))
 (nice_input_subterms 0
  (nice_input_subterms-1 nil 3884360217
   ("" (skeep)
    (("" (expand "nice_input?" -1)
      (("" (flatten)
        (("" (expand "nice_input?" 1)
          (("" (assert)
            (("" (case "subset?(vars(P1), vars(P))")
              (("1" (prop)
                (("1" (hide-all-but (-1 -3 1))
                  (("1" (expand "disjoint?")
                    (("1" (expand "empty?")
                      (("1" (skeep)
                        (("1" (inst?)
                          (("1" (expand "subset?")
                            (("1" (grind) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (hide-all-but (-1 -5 1))
                  (("2" (expand "subset?")
                    (("2" (skeep)
                      (("2" (inst?)
                        (("2" (inst?) (("2" (assert) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("3" (expand "well_formed?" 1)
                  (("3" (case "subset?(subterms(P1), subterms(P))")
                    (("1" (skeep)
                      (("1" (split 1)
                        (("1" (flatten)
                          (("1" (expand "subset?" -3)
                            (("1" (inst?)
                              (("1"
                                (assert)
                                (("1"
                                  (expand "well_formed?" -11)
                                  (("1"
                                    (inst -11 "t")
                                    (("1" (assert) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (flatten)
                          (("2" (expand "no_pair?" -16)
                            (("2" (inst -16 "t")
                              (("2" (assert) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (propax) nil nil))
                    nil))
                  nil)
                 ("4" (expand "match_problem?")
                  (("4" (skeep)
                    (("4" (inst -11 "X")
                      (("4" (assert)
                        (("4" (hide-all-but (-1 2 -12))
                          (("4" (expand "subset?" -2)
                            (("4" (inst?) (("4" (assert) nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (hide 2)
                (("2" (expand "subset?" 1)
                  (("2" (skeep)
                    (("2" (rewrite "vars_unif_prb")
                      (("2" (skolem -1 "t1")
                        (("2" (flatten)
                          (("2" (rewrite "vars_unif_prb")
                            (("2" (expand "subset?" -12)
                              (("2"
                                (inst -12 "t1")
                                (("2"
                                  (prop)
                                  (("1"
                                    (rewrite "subterms_mem_unif_prb")
                                    (("1"
                                      (skolem -1 "tS")
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (inst 1 "tS")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (lemma "vars_subterm")
                                              (("1"
                                                (inst -1 "x" "t1" "tS")
                                                (("1"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (rewrite "subterms_mem_unif_prb")
                                    (("2"
                                      (inst 1 "t1")
                                      (("2"
                                        (assert)
                                        (("2"
                                          (use "subterm_reflexive")
                                          (("2"
                                            (assert)
                                            (("2"
                                              (expand "no_pair?" -14)
                                              (("2"
                                                (inst -14 "t1")
                                                (("2"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((subterm_reflexive formula-decl nil term_properties nil)
    (subterms_mem_unif_prb formula-decl nil unification nil)
    (vars_subterm formula-decl nil term_properties nil)
    (vars_unif_prb formula-decl nil unification nil)
    (dom const-decl "finite_set[variable]" substitution nil)
    (subs const-decl "term" substitution nil)
    (no_pair? const-decl "bool" unification nil)
    (match_problem? const-decl "bool" unification nil)
    (variable type-eq-decl nil term_properties nil)
    (atom type-eq-decl nil atoms nil) (perm type-eq-decl nil atoms nil)
    (f_symbol type-eq-decl nil term_properties nil)
    (ac_symbol type-eq-decl nil term_properties nil)
    (term type-decl nil term_adt nil)
    (unif_pair type-eq-decl nil unification nil)
    (unif_prb type-eq-decl nil unification nil))
   shostak))
 (nice_input_cdr 0
  (nice_input_cdr-1 nil 3884371162
   ("" (skeep)
    (("" (lemma "nice_input_subterms")
      (("" (inst -1 "G" "P" "cdr(P)" "PV" "V" "sigma")
        (("" (assert)
          (("" (prop)
            (("1" (expand "subset?" 1)
              (("1" (skolem 1 "t")
                (("1" (prop)
                  (("1" (expand "subterms" 1)
                    (("1" (expand ("member" "union") 1)
                      (("1" (prop) nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (expand "subset?" 1)
              (("2" (skeep)
                (("2" (expand "rhs")
                  (("2" (expand "sec_proj" 1)
                    (("2" (expand "vars" 1)
                      (("2" (expand ("member" "union") 1)
                        (("2" (prop) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("3" (expand "nice_input?" -1)
              (("3" (flatten)
                (("3" (expand "well_formed?" -7)
                  (("3" (expand "no_pair?" 1)
                    (("3" (skolem 1 "t1")
                      (("3" (flatten)
                        (("3" (inst -9 "t1")
                          (("3" (assert)
                            (("3" (expand "member" 1)
                              (("3" (propax) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((no_pair? const-decl "bool" unification nil)
    (rhs const-decl "args" unification nil)
    (sec_proj def-decl "list[T2]" list_theory2 nil)
    (sub type-eq-decl nil substitution nil)
    (basic_sub type-eq-decl nil substitution nil)
    (unif_prb type-eq-decl nil unification nil)
    (unif_pair type-eq-decl nil unification nil)
    (term type-decl nil term_adt nil)
    (ac_symbol type-eq-decl nil term_properties nil)
    (f_symbol type-eq-decl nil term_properties nil)
    (perm type-eq-decl nil atoms nil)
    (fresh_context type-eq-decl nil freshness nil)
    (variable type-eq-decl nil term_properties nil)
    (atom type-eq-decl nil atoms nil))
   shostak))
 (nice_input_apply_sub 0
  (nice_input_apply_sub-1 nil 3884427130
   ("" (skeep)
    (("" (assert)
      (("" (prop)
        ((""
          (name-replace "sig1" "cons((X, ext(reverse(pi))(s)), null)")
          (("" (reveal -1)
            (("" (name-replace "G1" "fresh_subs?(sigma, G)`1")
              (("" (expand "nice_input?")
                (("" (flatten)
                  (("" (case "contained?(sig1, vars(P))")
                    (("1" (prop)
                      (("1" (rewrite "idempotent_append")
                        (("1" (use "idempotent_cons")
                          (("1" (assert) nil nil)) nil)
                         ("2" (hide-all-but (-1 -4 1))
                          (("2" (expand "contained?" -1)
                            (("2" (flatten)
                              (("2"
                                (hide -1)
                                (("2"
                                  (expand "disjoint?")
                                  (("2"
                                    (expand "empty?")
                                    (("2"
                                      (skeep)
                                      (("2"
                                        (expand "subset?" -2)
                                        (("2"
                                          (inst?)
                                          (("2"
                                            (inst?)
                                            (("2"
                                              (assert)
                                              (("2" (grind) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (expand "disjoint?" 1)
                        (("2" (expand "empty?" 1)
                          (("2" (skeep)
                            (("2" (expand ("member" "intersection") -1)
                              (("2"
                                (prop)
                                (("2"
                                  (use "dom_append")
                                  (("2"
                                    (expand "subset?" -1)
                                    (("2"
                                      (inst?)
                                      (("2"
                                        (assert)
                                        (("2"
                                          (hide -3)
                                          (("2"
                                            (expand
                                             ("member" "union")
                                             -1)
                                            (("2"
                                              (prop)
                                              (("1"
                                                (use
                                                 "apply_sub_elim_var2")
                                                (("1"
                                                  (prop)
                                                  (("1"
                                                    (expand
                                                     "disjoint?"
                                                     -1)
                                                    (("1"
                                                      (expand
                                                       "empty?"
                                                       -1)
                                                      (("1"
                                                        (inst?)
                                                        (("1"
                                                          (expand
                                                           ("member"
                                                            "intersection")
                                                           1)
                                                          (("1"
                                                            (propax)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (use
                                                     "idempotent_cons")
                                                    (("2"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (use "apply_sub_vars")
                                                (("2"
                                                  (expand "subset?" -1)
                                                  (("2"
                                                    (inst?)
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (expand
                                                         ("member"
                                                          "union")
                                                         -1)
                                                        (("2"
                                                          (expand
                                                           "disjoint?"
                                                           -7)
                                                          (("2"
                                                            (expand
                                                             "empty?"
                                                             -7)
                                                            (("2"
                                                              (inst
                                                               -7
                                                               "x")
                                                              (("2"
                                                                (expand
                                                                 ("member"
                                                                  "intersection")
                                                                 1)
                                                                (("2"
                                                                  (prop)
                                                                  (("1"
                                                                    (hide-all-but
                                                                     (-1
                                                                      -4
                                                                      1))
                                                                    (("1"
                                                                      (grind)
                                                                      nil
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (expand
                                                                     "vars"
                                                                     1)
                                                                    (("2"
                                                                      (expand
                                                                       ("member"
                                                                        "union")
                                                                       1)
                                                                      (("2"
                                                                        (prop)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("3" (rewrite "contained_append")
                        (("3" (hide-all-but (-1 -6 1))
                          (("3" (expand "contained?")
                            (("3" (prop)
                              (("1"
                                (expand "subset?")
                                (("1"
                                  (skeep)
                                  (("1"
                                    (inst?)
                                    (("1"
                                      (inst?)
                                      (("1"
                                        (inst?)
                                        (("1" (grind) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (expand "subset?")
                                (("2"
                                  (skeep)
                                  (("2"
                                    (inst?)
                                    (("2"
                                      (inst?)
                                      (("2"
                                        (inst?)
                                        (("2" (grind) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("4" (expand "subset?" 1)
                        (("4" (skeep)
                          (("4" (use "apply_sub_vars")
                            (("4" (expand "subset?")
                              (("4"
                                (inst?)
                                (("4"
                                  (assert)
                                  (("4"
                                    (expand ("member" "union") -1)
                                    (("4"
                                      (prop)
                                      (("1"
                                        (hide-all-but (-1 -3 -8 1))
                                        (("1" (grind) nil nil))
                                        nil)
                                       ("2"
                                        (hide-all-but (-1 -8 1 3))
                                        (("2" (grind) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("5" (expand "subset?" 1)
                        (("5" (skeep)
                          (("5" (rewrite "vars_append_context")
                            (("5" (expand ("member" "union") -1)
                              (("5"
                                (prop)
                                (("1"
                                  (expand "G1" -1)
                                  (("1"
                                    (use "fresh_subs?_var")
                                    (("1"
                                      (expand "subset?" (1 -1))
                                      (("1"
                                        (inst?)
                                        (("1"
                                          (assert)
                                          (("1"
                                            (expand
                                             ("member" "union")
                                             -1)
                                            (("1"
                                              (prop)
                                              (("1"
                                                (hide-all-but
                                                 (-1 -7 1))
                                                (("1"
                                                  (expand "contained?")
                                                  (("1"
                                                    (expand "subset?")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (inst?)
                                                          (("1"
                                                            (inst?)
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide-all-but
                                                 (-1 -9 1))
                                                (("2" (grind) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (hide-all-but (-1 -8 1))
                                  (("2" (grind) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("6" (use "well_formed_apply_sub")
                        (("6" (assert)
                          (("6" (prop)
                            (("1" (hide-all-but (-9 1 4))
                              (("1"
                                (rewrite "well_formed_unif_prb")
                                (("1"
                                  (rewrite "well_formed_unif_prb")
                                  (("1"
                                    (skolem 1 "t1")
                                    (("1"
                                      (inst?)
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (assert)
                                          (("1"
                                            (expand "member" 2)
                                            (("1" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (use "well_formed_basic_sub")
                              (("2"
                                (assert)
                                (("2"
                                  (hide-all-but (-9 -13 1))
                                  (("2"
                                    (rewrite "well_formed_unif_prb")
                                    (("2"
                                      (inst?)
                                      (("2"
                                        (assert)
                                        (("2"
                                          (rewrite "member_lhs_rhs")
                                          nil
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("7" (rewrite "well_formed_append")
                        (("7" (use "well_formed_basic_sub")
                          (("7" (assert)
                            (("7" (hide-all-but (-13 -9 1))
                              (("7"
                                (rewrite "well_formed_unif_prb")
                                (("7"
                                  (inst?)
                                  (("7"
                                    (assert)
                                    (("7"
                                      (rewrite "member_lhs_rhs")
                                      nil
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("8" (use "match_prb_apply_sub")
                        (("8" (assert)
                          (("8" (prop)
                            (("1" (hide-all-but (-11 1 4))
                              (("1"
                                (expand "match_problem?")
                                (("1"
                                  (skolem 1 "x")
                                  (("1"
                                    (inst?)
                                    (("1"
                                      (assert)
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (assert)
                                          (("1"
                                            (expand "rhs")
                                            (("1" (grind) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (use "img_basic_sub2")
                              (("2"
                                (replace -3)
                                (("2"
                                  (prop)
                                  (("1"
                                    (replace -1 1)
                                    (("1"
                                      (rewrite "vars_singleton")
                                      (("1"
                                        (rewrite "ext_vars")
                                        (("1"
                                          (hide-all-but (-12 -14 1))
                                          (("1"
                                            (expand
                                             "match_problem?"
                                             -1)
                                            (("1"
                                              (expand "subset?")
                                              (("1"
                                                (skeep)
                                                (("1"
                                                  (inst?)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (rewrite
                                                       "vars_args"
                                                       2)
                                                      (("1"
                                                        (inst 2 "s")
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (replace -1 1)
                                    (("2"
                                      (hide-all-but 1)
                                      (("2" (grind) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide 4)
                      (("2" (expand "contained?" 1)
                        (("2" (prop)
                          (("1" (use "dom_basic_sub2")
                            (("1" (replace -2 -1)
                              (("1"
                                (hide-all-but (1 -12 -1))
                                (("1"
                                  (prop)
                                  (("1"
                                    (expand "subset?")
                                    (("1"
                                      (skeep)
                                      (("1"
                                        (rewrite "vars_unif_prb" 1)
                                        (("1"
                                          (inst 1 "pi * X")
                                          (("1"
                                            (replace -1)
                                            (("1" (grind) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (replace -1 1)
                                    (("2" (grind) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (use "img_basic_sub2")
                            (("2" (replace -2)
                              (("2"
                                (hide-all-but (-1 -13 1))
                                (("2"
                                  (prop)
                                  (("1"
                                    (expand "subset?")
                                    (("1"
                                      (skeep)
                                      (("1"
                                        (replace -1 -2)
                                        (("1"
                                          (rewrite "vars_singleton")
                                          (("1"
                                            (rewrite "vars_unif_prb" 1)
                                            (("1"
                                              (inst 1 "s")
                                              (("1"
                                                (rewrite "ext_vars")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (rewrite
                                                     "member_lhs_rhs")
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (replace -1)
                                    (("2" (grind) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((contained? const-decl "bool" substitution nil)
    (unif_pair type-eq-decl nil unification nil)
    (unif_prb type-eq-decl nil unification nil)
    (match_prb_apply_sub formula-decl nil unification nil)
    (match_problem? const-decl "bool" unification nil)
    (rhs const-decl "args" unification nil)
    (sec_proj def-decl "list[T2]" list_theory2 nil)
    (ext_vars formula-decl nil term_properties nil)
    (vars_args formula-decl nil term_properties nil)
    (args type-eq-decl nil term_properties nil)
    (vars_singleton formula-decl nil term_properties nil)
    (img_basic_sub2 formula-decl nil substitution nil)
    (well_formed_append formula-decl nil substitution nil)
    (well_formed_apply_sub formula-decl nil unification nil)
    (well_formed_unif_prb formula-decl nil unification nil)
    (member_lhs_rhs formula-decl nil unification nil)
    (well_formed_basic_sub formula-decl nil substitution nil)
    (vars_append_context formula-decl nil freshness nil)
    (fresh_subs?_var formula-decl nil fresh_subs nil)
    (contained_append formula-decl nil substitution nil)
    (apply_sub_vars formula-decl nil unification nil)
    (apply_sub_elim_var2 formula-decl nil unification nil)
    (dom_append formula-decl nil substitution nil)
    (idempotent_append formula-decl nil substitution nil)
    (idempotent_cons formula-decl nil substitution nil)
    (vars const-decl "finite_set[variable]" unification nil)
    (img const-decl
     "finite_set[term[atom, perm, variable, f_symbol, ac_symbol]]"
     substitution nil)
    (dom const-decl "finite_set[variable]" substitution nil)
    (subs const-decl "term" substitution nil)
    (dom_basic_sub2 formula-decl nil substitution nil)
    (vars_unif_prb formula-decl nil unification nil)
    (var? adt-recognizer-decl "[term -> boolean]" term_adt nil)
    (* adt-constructor-decl "[[perm, variable] -> (var?)]" term_adt
       nil)
    (fresh_context type-eq-decl nil freshness nil)
    (basic_sub type-eq-decl nil substitution nil)
    (sub type-eq-decl nil substitution nil)
    (fresh_subs? def-decl "[fresh_context, bool]" fresh_subs nil)
    (ext def-decl "term" term_properties nil)
    (term type-decl nil term_adt nil)
    (ac_symbol type-eq-decl nil term_properties nil)
    (f_symbol type-eq-decl nil term_properties nil)
    (perm type-eq-decl nil atoms nil) (atom type-eq-decl nil atoms nil)
    (variable type-eq-decl nil term_properties nil))
   shostak))
 (nice_input_decompose 0
  (nice_input_decompose-1 nil 3885216474
   ("" (skeep)
    (("" (expand "nice_input?" -1)
      (("" (flatten)
        (("" (expand "nice_input?")
          (("" (assert)
            (("" (name-replace "dec_P" "decompose(arg(t), arg(s))`1")
              (("" (case "subset?(vars(dec_P), vars(P))")
                (("1" (prop)
                  (("1" (hide-all-but (-1 -3 1 2))
                    (("1" (expand "disjoint?")
                      (("1" (expand "empty?")
                        (("1" (skeep)
                          (("1" (inst?)
                            (("1" (expand ("member" "intersection"))
                              (("1"
                                (flatten)
                                (("1"
                                  (assert)
                                  (("1"
                                    (rewrite "vars_unif_prb_append")
                                    (("1" (grind) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2"
                    (case "subset?(vars(append(dec_P, cdr(P))), vars(P))")
                    (("1" (hide-all-but (-1 -6 1 2))
                      (("1" (grind) nil nil)) nil)
                     ("2" (hide-all-but (-1 1 3))
                      (("2" (expand "subset?")
                        (("2" (skeep)
                          (("2" (inst?)
                            (("2" (assert)
                              (("2"
                                (rewrite "vars_unif_prb_append")
                                (("2" (grind) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("3" (rewrite "well_formed_unif_prb_append")
                    (("3" (prop)
                      (("1" (expand "dec_P" 1)
                        (("1" (use "decompose_well_formed")
                          (("1" (inst -1 "sym(t)")
                            (("1" (assert)
                              (("1"
                                (prop)
                                (("1"
                                  (use "term_app_eta")
                                  (("1"
                                    (expand "sym" 1)
                                    (("1"
                                      (expand "same_func?" -16)
                                      (("1"
                                        (expand "sym" -16)
                                        (("1"
                                          (assert)
                                          (("1"
                                            (flatten)
                                            (("1"
                                              (lemma "term_app_eta")
                                              (("1"
                                                (inst -1 "s")
                                                (("1"
                                                  (replace -19 :dir rl)
                                                  (("1"
                                                    (replace -1)
                                                    (("1"
                                                      (replace -2)
                                                      (("1"
                                                        (hide-all-but
                                                         (-10
                                                          -13
                                                          -14
                                                          1))
                                                        (("1"
                                                          (expand
                                                           "well_formed?"
                                                           1)
                                                          (("1"
                                                            (rewrite
                                                             "well_formed_unif_prb")
                                                            (("1"
                                                              (prop)
                                                              (("1"
                                                                (inst
                                                                 -1
                                                                 "t")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (inst
                                                                 -1
                                                                 "s")
                                                                (("2"
                                                                  (prop)
                                                                  (("2"
                                                                    (use
                                                                     "member_lhs_rhs")
                                                                    (("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide-all-but (-8 1 2))
                        (("2" (rewrite "well_formed_unif_prb")
                          (("2" (rewrite "well_formed_unif_prb")
                            (("2" (skeep)
                              (("2"
                                (inst?)
                                (("2" (grind) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("4" (expand "match_problem?" 1)
                    (("4" (skolem 1 "x")
                      (("4" (prop)
                        (("4" (expand "match_problem?" -11)
                          (("4" (inst?)
                            (("4" (assert)
                              (("4"
                                (rewrite "vars_args" -1)
                                (("4"
                                  (skolem -1 "ti")
                                  (("4"
                                    (prop)
                                    (("4"
                                      (rewrite "member_rhs_append")
                                      (("4"
                                        (prop)
                                        (("1"
                                          (expand "dec_P" -1)
                                          (("1"
                                            (use "decompose_vars_rhs")
                                            (("1"
                                              (expand "subset?" -1)
                                              (("1"
                                                (inst?)
                                                (("1"
                                                  (prop)
                                                  (("1"
                                                    (rewrite
                                                     "vars_args"
                                                     2)
                                                    (("1"
                                                      (inst 2 "s")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (expand
                                                           "vars"
                                                           2)
                                                          (("1"
                                                            (propax)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (rewrite
                                                     "vars_args"
                                                     1)
                                                    (("2"
                                                      (inst 1 "ti")
                                                      (("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (rewrite "vars_args" 2)
                                          (("2"
                                            (inst 2 "ti")
                                            (("2"
                                              (assert)
                                              (("2"
                                                (hide-all-but (-1 2 3))
                                                (("2" (grind) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (hide 3)
                  (("2" (expand "dec_P" 1)
                    (("2" (use "decompose_vars")
                      (("2" (case "subset?(vars(t, s), vars(P))")
                        (("1" (hide-all-but (-1 -2 -14 -15 1))
                          (("1" (expand "subset?")
                            (("1" (skeep) (("1" (grind) nil nil)) nil))
                            nil))
                          nil)
                         ("2" (hide-all-but (-11 -12 1))
                          (("2" (expand "subset?" 1)
                            (("2" (skeep)
                              (("2"
                                (expand "vars" -1)
                                (("2"
                                  (expand ("member" "union") -1)
                                  (("2"
                                    (prop)
                                    (("1"
                                      (rewrite "vars_unif_prb")
                                      (("1"
                                        (inst 1 "t")
                                        (("1" (assert) nil nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (hide -2)
                                      (("2"
                                        (use "member_lhs_rhs")
                                        (("2"
                                          (assert)
                                          (("2"
                                            (rewrite "vars_unif_prb")
                                            (("2"
                                              (inst?)
                                              (("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (set type-eq-decl nil sets nil)
    (subset? const-decl "bool" sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (vars def-decl "finite_set[variable]" unification nil)
    (match_problem? const-decl "bool" unification nil)
    (vars_args formula-decl nil term_properties nil)
    (every adt-def-decl "boolean" list_adt nil)
    (args type-eq-decl nil term_properties nil)
    (rhs const-decl "args" unification nil)
    (decompose_vars_rhs formula-decl nil unification nil)
    (vars def-decl "finite_set[variable]" term_properties nil)
    (member def-decl "bool" list_props nil)
    (sec_proj def-decl "list[T2]" list_theory2 nil)
    (member_rhs_append formula-decl nil unification nil)
    (well_formed_unif_prb_append formula-decl nil unification nil)
    (well_formed? const-decl "bool" term_properties nil)
    (member def-decl "bool" unification nil)
    (dec_P skolem-const-decl "unif_prb" ac_step nil)
    (sym const-decl "string" term_properties nil)
    (string type-eq-decl nil strings nil)
    (well_formed_unif_prb formula-decl nil unification nil)
    (member_lhs_rhs formula-decl nil unification nil)
    (well_formed? const-decl "bool" unification nil)
    (same_func? const-decl "bool" term_properties nil)
    (term_app_eta formula-decl nil term_adt nil)
    (decompose_well_formed formula-decl nil unification nil)
    (append def-decl "list[T]" list_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (empty? const-decl "bool" sets nil)
    (cdr adt-accessor-decl "[(cons?) -> list]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (vars_unif_prb_append formula-decl nil unification nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (subs const-decl "term" substitution nil)
    (dom const-decl "finite_set[variable]" substitution nil)
    (vars const-decl "finite_set[variable]" unification nil)
    (union const-decl "set" sets nil)
    (member const-decl "bool" sets nil)
    (intersection const-decl "set" sets nil)
    (disjoint? const-decl "bool" sets nil)
    (finite_intersection1 application-judgement "finite_set"
     finite_sets nil)
    (vars_unif_prb formula-decl nil unification nil)
    (decompose_vars formula-decl nil unification nil)
    (arg adt-accessor-decl "[(app?) -> term]" term_adt nil)
    (app? adt-recognizer-decl "[term -> boolean]" term_adt nil)
    (decompose def-decl "[unif_prb, bool]" unification nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (unif_prb type-eq-decl nil unification nil)
    (unif_pair type-eq-decl nil unification nil)
    (variable type-eq-decl nil term_properties nil)
    (TRUE const-decl "bool" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (term type-decl nil term_adt nil)
    (ac_symbol type-eq-decl nil term_properties nil)
    (f_symbol type-eq-decl nil term_properties nil)
    (char type-eq-decl nil strings nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (character type-decl nil character_adt nil)
    (below type-eq-decl nil nat_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (perm type-eq-decl nil atoms nil) (list type-decl nil list_adt nil)
    (atom type-eq-decl nil atoms nil) (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (nice_input? const-decl "bool" ac_step nil))
   shostak))
 (input_apply_ac_mem 0
  (input_apply_ac_mem-2 nil 3884262114
   ("" (measure-induct "length(ac_results_subs)" "ac_results_subs")
    (("" (skolem 1 "ac_results_subs")
      (("" (prop)
        (("" (skeep)
          (("" (split 1)
            (("1" (flatten)
              (("1" (expand "input_apply_ac" -1)
                (("1" (lift-if)
                  (("1" (split)
                    (("1" (flatten)
                      (("1" (expand "member" -2)
                        (("1" (propax) nil nil)) nil))
                      nil)
                     ("2" (flatten)
                      (("2" (expand "member" -1)
                        (("2" (split -1)
                          (("1" (hide -2)
                            (("1" (inst?)
                              (("1"
                                (inst 2 "car(ac_results_subs)`1")
                                (("1"
                                  (assert)
                                  (("1"
                                    (expand "member" 2)
                                    (("1" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (inst -2 "cdr(ac_results_subs)")
                            (("2" (expand "length" -2 2)
                              (("2"
                                (assert)
                                (("2"
                                  (inst? -2)
                                  (("2"
                                    (assert)
                                    (("2"
                                      (skeep)
                                      (("2"
                                        (inst? 2)
                                        (("2"
                                          (assert)
                                          (("2"
                                            (expand "member" 2)
                                            (("2" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (prop)
              (("2" (skeep)
                (("2" (expand "member" -1)
                  (("2" (lift-if)
                    (("2" (prop)
                      (("1" (expand "input_apply_ac" 2)
                        (("1" (lift-if)
                          (("1" (assert)
                            (("1" (expand "member" 2)
                              (("1" (propax) nil nil)) nil))
                            nil))
                          nil))
                        nil)
                       ("2" (inst -7 "cdr(ac_results_subs)")
                        (("2" (expand "length" -7 2)
                          (("2" (assert)
                            (("2"
                              (inst -7 "G" "P" "PV" "V" "input1_"
                               "sigma")
                              (("2"
                                (expand "input_apply_ac" 2)
                                (("2"
                                  (expand "member" 2)
                                  (("2"
                                    (flatten)
                                    (("2"
                                      (hide 2)
                                      (("2"
                                        (hide -7)
                                        (("2"
                                          (assert)
                                          (("2"
                                            (inst 3 "G1" "P1" "sigma1")
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((atom type-eq-decl nil atoms nil)
    (variable type-eq-decl nil term_properties nil)
    (fresh_context type-eq-decl nil freshness nil)
    (perm type-eq-decl nil atoms nil)
    (f_symbol type-eq-decl nil term_properties nil)
    (ac_symbol type-eq-decl nil term_properties nil)
    (term type-decl nil term_adt nil)
    (unif_pair type-eq-decl nil unification nil)
    (unif_prb type-eq-decl nil unification nil)
    (basic_sub type-eq-decl nil substitution nil)
    (sub type-eq-decl nil substitution nil)
    (apply_sub def-decl "unif_prb" unification nil))
   nil)
  (input_apply_ac_mem-1 nil 3884090639
   ("" (measure-induct "length(ac_results_subs)" "ac_results_subs")
    (("" (skolem 1 "ac_results_subs")
      (("" (prop)
        (("" (skeep)
          (("" (split 1)
            (("1" (flatten)
              (("1" (expand "input_apply_ac" -1)
                (("1" (lift-if)
                  (("1" (split)
                    (("1" (flatten)
                      (("1" (expand "member" -2)
                        (("1" (propax) nil nil)) nil))
                      nil)
                     ("2" (flatten)
                      (("2" (expand "member" -1)
                        (("2" (split -1)
                          (("1" (hide -2)
                            (("1" (inst?)
                              (("1"
                                (inst 2 "car(ac_results_subs)`1")
                                (("1"
                                  (assert)
                                  (("1"
                                    (expand "member" 2)
                                    (("1" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (inst -2 "cdr(ac_results_subs)")
                            (("2" (expand "length" -2 2)
                              (("2"
                                (assert)
                                (("2"
                                  (inst? -2)
                                  (("2"
                                    (assert)
                                    (("2"
                                      (skeep)
                                      (("2"
                                        (inst? 2)
                                        (("2"
                                          (assert)
                                          (("2"
                                            (expand "member" 2)
                                            (("2" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (prop)
              (("2" (skeep)
                (("2" (expand "member" -1)
                  (("2" (lift-if)
                    (("2" (prop)
                      (("1" (expand "input_apply_ac" 2)
                        (("1" (lift-if)
                          (("1" (assert)
                            (("1" (expand "member" 2)
                              (("1" (propax) nil nil)) nil))
                            nil))
                          nil))
                        nil)
                       ("2" (inst -7 "cdr(ac_results_subs)")
                        (("2" (expand "length" -7 2)
                          (("2" (assert)
                            (("2"
                              (inst -7 "G" "P" "PV" "V" "input1"
                               "sigma")
                              (("2"
                                (expand "input_apply_ac" 2)
                                (("2"
                                  (expand "member" 2)
                                  (("2"
                                    (flatten)
                                    (("2"
                                      (hide 2)
                                      (("2"
                                        (hide -7)
                                        (("2"
                                          (assert)
                                          (("2"
                                            (inst 3 "G1" "P1" "sigma1")
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((atom type-eq-decl nil atoms nil)
    (variable type-eq-decl nil term_properties nil)
    (fresh_context type-eq-decl nil freshness nil)
    (perm type-eq-decl nil atoms nil)
    (f_symbol type-eq-decl nil term_properties nil)
    (ac_symbol type-eq-decl nil term_properties nil)
    (term type-decl nil term_adt nil)
    (unif_pair type-eq-decl nil unification nil)
    (unif_prb type-eq-decl nil unification nil)
    (basic_sub type-eq-decl nil substitution nil)
    (sub type-eq-decl nil substitution nil)
    (apply_sub def-decl "unif_prb" unification nil))
   shostak))
 (exists_ac_max_ac0 0
  (exists_ac_max_ac0-1 nil 3884093017
   ("" (measure-induct "length(P)" "P")
    (("" (skolem 1 "P")
      (("" (prop)
        (("" (expand "max_ac_size" -2)
          (("" (lift-if)
            (("" (prop)
              (("1" (assert) nil nil)
               ("2" (expand "max" -2)
                (("2" (lift-if)
                  (("2" (hide -3) (("2" (grind) nil nil)) nil)) nil))
                nil)
               ("3" (inst -2 "cdr(P)")
                (("3" (expand "length" -2 2)
                  (("3" (assert)
                    (("3" (expand "exists_ac?")
                      (("3" (skeep)
                        (("3" (inst 3 "up")
                          (("3" (assert) (("3" (grind) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((atom type-eq-decl nil atoms nil) (perm type-eq-decl nil atoms nil)
    (f_symbol type-eq-decl nil term_properties nil)
    (ac_symbol type-eq-decl nil term_properties nil)
    (term type-decl nil term_adt nil)
    (variable type-eq-decl nil term_properties nil)
    (unif_pair type-eq-decl nil unification nil)
    (unif_prb type-eq-decl nil unification nil)
    (exists_ac? const-decl "bool" unification nil)
    (ac_prb? const-decl "bool" unification nil)
    (size const-decl "nat" unification nil))
   shostak))
 (exists_ac_choose_ac_is_ac 0
  (exists_ac_choose_ac_is_ac-1 nil 3884092012
   ("" (measure-induct "length(P)" "P")
    (("" (skolem 1 "P")
      (("" (prop)
        (("" (skeep)
          (("" (expand "choose_ac" 1)
            (("" (lift-if)
              (("" (split 1)
                (("1" (flatten)
                  (("1" (hide -2 1)
                    (("1" (expand "exists_ac?" -2)
                      (("1" (grind) nil nil)) nil))
                    nil))
                  nil)
                 ("2" (flatten)
                  (("2" (split 2)
                    (("1" (flatten) (("1" (grind) nil nil)) nil)
                     ("2" (flatten)
                      (("2" (inst -1 "cdr(P)")
                        (("2" (expand "length" -1 2)
                          (("2" (assert)
                            (("2" (inst -1 "cons(car(P), P1)")
                              (("2"
                                (split -1)
                                (("1"
                                  (expand "max_ac_size" 2 1)
                                  (("1"
                                    (lift-if)
                                    (("1"
                                      (split 2)
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (assert)
                                          (("1"
                                            (expand "max_ac_size" 2)
                                            (("1"
                                              (expand "max" 1)
                                              (("1"
                                                (lift-if)
                                                (("1"
                                                  (split 1)
                                                  (("1"
                                                    (flatten)
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (flatten)
                                                    (("2"
                                                      (expand "max" 3)
                                                      (("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2" (flatten) nil nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (expand "exists_ac?" -1)
                                  (("2"
                                    (skolem -1 "up")
                                    (("2"
                                      (flatten)
                                      (("2"
                                        (expand "member" -1)
                                        (("2"
                                          (split -1)
                                          (("1"
                                            (assert)
                                            (("1"
                                              (expand "max_ac_size" 2)
                                              (("1"
                                                (use
                                                 "exists_ac_max_ac0")
                                                (("1"
                                                  (prop)
                                                  (("1"
                                                    (case
                                                     "max_ac_size(cdr(P)) = 0")
                                                    (("1"
                                                      (replace -1)
                                                      (("1"
                                                        (expand
                                                         "max"
                                                         3)
                                                        (("1"
                                                          (lift-if)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (hide-all-but
                                                               3)
                                                              (("1"
                                                                (grind)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (expand "exists_ac?" 1)
                                            (("2"
                                              (inst 1 "up")
                                              (("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((atom type-eq-decl nil atoms nil) (perm type-eq-decl nil atoms nil)
    (f_symbol type-eq-decl nil term_properties nil)
    (ac_symbol type-eq-decl nil term_properties nil)
    (term type-decl nil term_adt nil)
    (variable type-eq-decl nil term_properties nil)
    (unif_pair type-eq-decl nil unification nil)
    (unif_prb type-eq-decl nil unification nil)
    (exists_ac? const-decl "bool" unification nil)
    (ac_app? adt-recognizer-decl "[term -> boolean]" term_adt nil)
    (ac_prb? const-decl "bool" unification nil)
    (size const-decl "nat" unification nil))
   shostak))
 (exists_ac_is_ac 0
  (exists_ac_is_ac-1 nil 3884091290
   ("" (skeep)
    (("" (expand "choose_ac" 1)
      (("" (use "exists_ac_choose_ac_is_ac") (("" (assert) nil nil))
        nil))
      nil))
    nil)
   ((unif_prb type-eq-decl nil unification nil)
    (unif_pair type-eq-decl nil unification nil)
    (variable type-eq-decl nil term_properties nil)
    (term type-decl nil term_adt nil)
    (ac_symbol type-eq-decl nil term_properties nil)
    (f_symbol type-eq-decl nil term_properties nil)
    (perm type-eq-decl nil atoms nil)
    (atom type-eq-decl nil atoms nil))
   shostak))
 (max_size_unif_pair 0
  (max_size_unif_pair-1 nil 3884447220
   ("" (measure-induct "length(P)" "P")
    (("" (skolem 1 "P")
      (("" (prop)
        (("" (name-replace "n" "max_size(P)")
          (("" (reveal -1)
            (("" (expand "max_size" -1)
              (("" (assert)
                (("" (expand "max" -1 1)
                  (("" (lift-if)
                    (("" (prop)
                      (("1" (inst -3 "cdr(P)")
                        (("1" (expand "length" -3 2)
                          (("1" (assert)
                            (("1" (prop)
                              (("1"
                                (skolem -1 "up")
                                (("1"
                                  (inst 2 "up")
                                  (("1"
                                    (flatten)
                                    (("1"
                                      (assert)
                                      (("1"
                                        (expand "member" 2)
                                        (("1" (propax) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (expand "max_size" -2)
                                (("2" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (inst 3 "car(P)") (("2" (grind) nil nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((atom type-eq-decl nil atoms nil) (perm type-eq-decl nil atoms nil)
    (f_symbol type-eq-decl nil term_properties nil)
    (ac_symbol type-eq-decl nil term_properties nil)
    (term type-decl nil term_adt nil)
    (variable type-eq-decl nil term_properties nil)
    (unif_pair type-eq-decl nil unification nil)
    (unif_prb type-eq-decl nil unification nil)
    (size const-decl "nat" unification nil))
   shostak))
 (choose_ac_vars_aux 0
  (choose_ac_vars_aux-1 nil 3884093699
   ("" (measure-induct "length(P)" "P")
    (("" (skolem 1 "P")
      (("" (prop)
        (("" (skeep)
          (("" (expand "choose_ac" 1)
            (("" (lift-if)
              (("" (split 1)
                (("1" (flatten)
                  (("1" (hide -2) (("1" (grind) nil nil)) nil)) nil)
                 ("2" (flatten)
                  (("2" (split 2)
                    (("1" (flatten)
                      (("1" (hide -3)
                        (("1" (expand "subset?" 1)
                          (("1" (skeep)
                            (("1" (rewrite "vars_unif_prb_append")
                              (("1" (grind) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (flatten)
                      (("2" (inst -1 "cdr(P)")
                        (("2" (expand "length" -1 2)
                          (("2" (assert)
                            (("2" (inst?)
                              (("2"
                                (hide 1)
                                (("2"
                                  (expand "subset?")
                                  (("2"
                                    (skeep)
                                    (("2"
                                      (inst -2 "x")
                                      (("2"
                                        (assert)
                                        (("2" (grind) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((vars_unif_prb_append formula-decl nil unification nil)
    (ac_prb? const-decl "bool" unification nil)
    (size const-decl "nat" unification nil)
    (vars const-decl "finite_set[variable]" unification nil)
    (unif_prb type-eq-decl nil unification nil)
    (unif_pair type-eq-decl nil unification nil)
    (variable type-eq-decl nil term_properties nil)
    (term type-decl nil term_adt nil)
    (ac_symbol type-eq-decl nil term_properties nil)
    (f_symbol type-eq-decl nil term_properties nil)
    (perm type-eq-decl nil atoms nil)
    (atom type-eq-decl nil atoms nil))
   shostak))
 (choose_ac_vars 0
  (choose_ac_vars-1 nil 3884093623
   ("" (skeep)
    (("" (expand "choose_ac" 1)
      (("" (use "choose_ac_vars_aux") (("" (grind) nil nil)) nil))
      nil))
    nil)
   ((unif_prb type-eq-decl nil unification nil)
    (unif_pair type-eq-decl nil unification nil)
    (variable type-eq-decl nil term_properties nil)
    (term type-decl nil term_adt nil)
    (ac_symbol type-eq-decl nil term_properties nil)
    (f_symbol type-eq-decl nil term_properties nil)
    (perm type-eq-decl nil atoms nil)
    (atom type-eq-decl nil atoms nil))
   shostak))
 (choose_ac_vars_aux2 0
  (choose_ac_vars_aux2-1 nil 3884112890
   ("" (measure-induct "length(P)" "P")
    (("" (skolem 1 "P")
      (("" (prop)
        (("" (skeep)
          (("" (expand "choose_ac" 1)
            (("" (lift-if)
              (("" (split 1)
                (("1" (flatten)
                  (("1" (hide -2) (("1" (grind) nil nil)) nil)) nil)
                 ("2" (flatten)
                  (("2" (split 2)
                    (("1" (flatten) (("1" (grind) nil nil)) nil)
                     ("2" (flatten)
                      (("2" (inst -1 "cdr(P)")
                        (("2" (expand "length" -1 2)
                          (("2" (assert)
                            (("2" (inst?)
                              (("2"
                                (hide 1)
                                (("2"
                                  (expand "subset?")
                                  (("2"
                                    (skeep)
                                    (("2" (grind) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((ac_prb? const-decl "bool" unification nil)
    (size const-decl "nat" unification nil)
    (vars const-decl "finite_set[variable]" unification nil)
    (unif_prb type-eq-decl nil unification nil)
    (unif_pair type-eq-decl nil unification nil)
    (variable type-eq-decl nil term_properties nil)
    (term type-decl nil term_adt nil)
    (ac_symbol type-eq-decl nil term_properties nil)
    (f_symbol type-eq-decl nil term_properties nil)
    (perm type-eq-decl nil atoms nil)
    (atom type-eq-decl nil atoms nil))
   shostak))
 (choose_ac_vars2 0
  (choose_ac_vars2-1 nil 3884113115
   ("" (skeep)
    (("" (expand "choose_ac")
      (("" (use "choose_ac_vars_aux2") nil nil)) nil))
    nil)
   ((atom type-eq-decl nil atoms nil) (perm type-eq-decl nil atoms nil)
    (f_symbol type-eq-decl nil term_properties nil)
    (ac_symbol type-eq-decl nil term_properties nil)
    (term type-decl nil term_adt nil)
    (variable type-eq-decl nil term_properties nil)
    (unif_pair type-eq-decl nil unification nil)
    (unif_prb type-eq-decl nil unification nil))
   shostak))
 (choose_ac_rhs_aux 0
  (choose_ac_rhs_aux-1 nil 3884114402
   ("" (measure-induct "length(P)" "P")
    (("" (skolem 1 "P")
      (("" (flatten)
        (("" (skeep)
          (("" (expand "choose_ac" 1)
            (("" (lift-if)
              (("" (split 1)
                (("1" (flatten)
                  (("1" (hide -2 1) (("1" (grind) nil nil)) nil)) nil)
                 ("2" (flatten)
                  (("2" (split 2)
                    (("1" (flatten)
                      (("1" (expand "rhs" 1) (("1" (grind) nil nil))
                        nil))
                      nil)
                     ("2" (flatten)
                      (("2" (inst -1 "cdr(P)")
                        (("2" (expand "length" -1 2)
                          (("2" (assert)
                            (("2" (inst -1 "cons(car(P), P1)")
                              (("2"
                                (split -1)
                                (("1"
                                  (expand "max_ac_size" 2)
                                  (("1"
                                    (assert)
                                    (("1"
                                      (lift-if)
                                      (("1"
                                        (split 2)
                                        (("1"
                                          (flatten)
                                          (("1"
                                            (assert)
                                            (("1"
                                              (expand "max" 1)
                                              (("1"
                                                (lift-if)
                                                (("1"
                                                  (split 1)
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (expand "rhs")
                                                      (("1"
                                                        (expand
                                                         "sec_proj"
                                                         1)
                                                        (("1"
                                                          (expand
                                                           "member"
                                                           1)
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (flatten)
                                                    (("2"
                                                      (expand
                                                       "max_ac_size"
                                                       3)
                                                      (("2"
                                                        (expand
                                                         "max"
                                                         3)
                                                        (("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (flatten)
                                          (("2"
                                            (expand "rhs")
                                            (("2"
                                              (expand "sec_proj" 2)
                                              (("2"
                                                (expand "member" 2)
                                                (("2"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (expand "exists_ac?" -1)
                                  (("2"
                                    (skeep)
                                    (("2"
                                      (expand "member" -1)
                                      (("2"
                                        (split -1)
                                        (("1"
                                          (assert)
                                          (("1"
                                            (expand "max_ac_size" 2)
                                            (("1"
                                              (case
                                               "max_ac_size(cdr(P)) = 0")
                                              (("1"
                                                (replace -1)
                                                (("1" (grind) nil nil))
                                                nil)
                                               ("2"
                                                (lemma
                                                 "exists_ac_max_ac0")
                                                (("2"
                                                  (inst?)
                                                  (("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (expand "exists_ac?" 1)
                                          (("2"
                                            (inst 1 "up")
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((atom type-eq-decl nil atoms nil) (perm type-eq-decl nil atoms nil)
    (f_symbol type-eq-decl nil term_properties nil)
    (ac_symbol type-eq-decl nil term_properties nil)
    (term type-decl nil term_adt nil)
    (variable type-eq-decl nil term_properties nil)
    (unif_pair type-eq-decl nil unification nil)
    (unif_prb type-eq-decl nil unification nil)
    (exists_ac? const-decl "bool" unification nil)
    (args type-eq-decl nil term_properties nil)
    (rhs const-decl "args" unification nil)
    (ac_prb? const-decl "bool" unification nil)
    (sec_proj def-decl "list[T2]" list_theory2 nil)
    (size const-decl "nat" unification nil))
   shostak))
 (choose_ac_rhs 0
  (choose_ac_rhs-2 nil 3884676374
   ("" (expand "choose_ac")
    (("" (assert)
      (("" (skeep)
        (("" (use "choose_ac_rhs_aux") (("" (assert) nil nil)) nil))
        nil))
      nil))
    nil)
   ((atom type-eq-decl nil atoms nil) (perm type-eq-decl nil atoms nil)
    (f_symbol type-eq-decl nil term_properties nil)
    (ac_symbol type-eq-decl nil term_properties nil)
    (term type-decl nil term_adt nil)
    (variable type-eq-decl nil term_properties nil)
    (unif_pair type-eq-decl nil unification nil)
    (unif_prb type-eq-decl nil unification nil))
   nil)
  (choose_ac_rhs-1 nil 3884114188
   ("" (expand "choose_ac")
    (("" (skeep)
      (("" (use "choose_ac_rhs_aux") (("" (assert) nil nil)) nil))
      nil))
    nil)
   ((unif_prb type-eq-decl nil unification nil)
    (unif_pair type-eq-decl nil unification nil)
    (variable type-eq-decl nil term_properties nil)
    (term type-decl nil term_adt nil)
    (ac_symbol type-eq-decl nil term_properties nil)
    (f_symbol type-eq-decl nil term_properties nil)
    (perm type-eq-decl nil atoms nil)
    (atom type-eq-decl nil atoms nil))
   shostak))
 (choose_ac2_mem_aux 0
  (choose_ac2_mem_aux-1 nil 3884272617
   ("" (measure-induct "length(P)" "P")
    (("" (skolem 1 "P")
      (("" (prop)
        (("" (skeep)
          (("" (expand "choose_ac" 1)
            (("" (lift-if)
              (("" (split 1)
                (("1" (flatten)
                  (("1" (hide -2 1) (("1" (grind) nil nil)) nil)) nil)
                 ("2" (flatten)
                  (("2" (split 2)
                    (("1" (flatten) (("1" (grind) nil nil)) nil)
                     ("2" (flatten)
                      (("2" (inst -1 "cdr(P)")
                        (("2" (expand "length" -1 2)
                          (("2" (assert)
                            (("2" (inst -1 "cons(car(P), P1)")
                              (("2"
                                (split -1)
                                (("1"
                                  (expand "member" 2)
                                  (("1"
                                    (assert)
                                    (("1"
                                      (flatten)
                                      (("1"
                                        (expand "max_ac_size" 3)
                                        (("1"
                                          (lift-if)
                                          (("1"
                                            (split 3)
                                            (("1"
                                              (flatten)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (expand "max" 1 1)
                                                  (("1"
                                                    (lift-if)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (split 1)
                                                        (("1"
                                                          (propax)
                                                          nil
                                                          nil)
                                                         ("2"
                                                          (flatten)
                                                          (("2"
                                                            (expand
                                                             "max_ac_size"
                                                             3)
                                                            (("2"
                                                              (expand
                                                               "max"
                                                               3)
                                                              (("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2" (flatten) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (expand "exists_ac?" -1)
                                  (("2"
                                    (skeep)
                                    (("2"
                                      (expand "member" -1)
                                      (("2"
                                        (split -1)
                                        (("1"
                                          (assert)
                                          (("1"
                                            (expand "max_ac_size" 2)
                                            (("1"
                                              (use "exists_ac_max_ac0")
                                              (("1"
                                                (case
                                                 "max_ac_size(cdr(P)) > 0")
                                                (("1" (assert) nil nil)
                                                 ("2"
                                                  (case
                                                   "max_ac_size(cdr(P)) = 0")
                                                  (("1"
                                                    (expand "max" 3)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (replace -1)
                                                        (("1"
                                                          (grind)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (expand "exists_ac?" 1)
                                          (("2"
                                            (inst 1 "up")
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((atom type-eq-decl nil atoms nil) (perm type-eq-decl nil atoms nil)
    (f_symbol type-eq-decl nil term_properties nil)
    (ac_symbol type-eq-decl nil term_properties nil)
    (term type-decl nil term_adt nil)
    (variable type-eq-decl nil term_properties nil)
    (unif_pair type-eq-decl nil unification nil)
    (unif_prb type-eq-decl nil unification nil)
    (exists_ac? const-decl "bool" unification nil)
    (ac_prb? const-decl "bool" unification nil)
    (size const-decl "nat" unification nil))
   shostak))
 (choose_ac2_mem 0
  (choose_ac2_mem-1 nil 3884273272
   ("" (skeep)
    (("" (expand "choose_ac" 1)
      (("" (use "choose_ac2_mem_aux") (("" (assert) nil nil)) nil))
      nil))
    nil)
   ((atom type-eq-decl nil atoms nil) (perm type-eq-decl nil atoms nil)
    (f_symbol type-eq-decl nil term_properties nil)
    (ac_symbol type-eq-decl nil term_properties nil)
    (term type-decl nil term_adt nil)
    (variable type-eq-decl nil term_properties nil)
    (unif_pair type-eq-decl nil unification nil)
    (unif_prb type-eq-decl nil unification nil))
   shostak))
 (choose_ac_unif_pair_aux 0
  (choose_ac_unif_pair_aux-1 nil 3884260432
   ("" (measure-induct "length(P)" "P")
    (("" (skolem 1 "P")
      (("" (prop)
        (("" (skeep)
          (("" (expand "choose_ac" -2)
            (("" (lift-if)
              (("" (split -2)
                (("1" (flatten)
                  (("1" (expand "member" -2) (("1" (propax) nil nil))
                    nil))
                  nil)
                 ("2" (flatten)
                  (("2" (split -1)
                    (("1" (flatten)
                      (("1" (expand "append" 2)
                        (("1" (assert)
                          (("1" (expand "member" 2)
                            (("1" (propax) nil nil)) nil))
                          nil))
                        nil))
                      nil)
                     ("2" (flatten)
                      (("2" (inst -2 "cdr(P)")
                        (("2" (expand "length" -2 2)
                          (("2" (assert)
                            (("2" (inst?)
                              (("2"
                                (assert)
                                (("2"
                                  (rewrite "member_append")
                                  (("2"
                                    (rewrite "member_append")
                                    (("2" (grind) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((member_append formula-decl nil list_theory nil)
    (size const-decl "nat" unification nil)
    (ac_prb? const-decl "bool" unification nil)
    (unif_prb type-eq-decl nil unification nil)
    (unif_pair type-eq-decl nil unification nil)
    (variable type-eq-decl nil term_properties nil)
    (term type-decl nil term_adt nil)
    (ac_symbol type-eq-decl nil term_properties nil)
    (f_symbol type-eq-decl nil term_properties nil)
    (perm type-eq-decl nil atoms nil)
    (atom type-eq-decl nil atoms nil))
   shostak))
 (choose_ac_unif_pair 0
  (choose_ac_unif_pair-1 nil 3884260353
   ("" (expand "choose_ac" 1)
    (("" (skeep)
      (("" (use "choose_ac_unif_pair_aux")
        (("" (assert) (("" (rewrite "append_null") nil nil)) nil))
        nil))
      nil))
    nil)
   ((unif_prb type-eq-decl nil unification nil)
    (unif_pair type-eq-decl nil unification nil)
    (variable type-eq-decl nil term_properties nil)
    (term type-decl nil term_adt nil)
    (ac_symbol type-eq-decl nil term_properties nil)
    (f_symbol type-eq-decl nil term_properties nil)
    (perm type-eq-decl nil atoms nil)
    (atom type-eq-decl nil atoms nil))
   shostak))
 (choose_ac_well_formed 0
  (choose_ac_well_formed-1 nil 3884259996
   ("" (skeep)
    (("" (expand "well_formed?")
      (("" (skeep)
        (("" (inst -1 "t")
          (("" (flatten)
            (("" (split 1)
              (("1" (flatten)
                (("1" (assert)
                  (("1" (rewrite "subterms_mem")
                    (("1" (rewrite "subterms_mem")
                      (("1" (skolem -1 "up")
                        (("1" (flatten)
                          (("1" (inst 2 "up")
                            (("1" (assert)
                              (("1"
                                (lemma "choose_ac_unif_pair")
                                (("1"
                                  (inst -1 "P" "up")
                                  (("1" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (flatten)
                (("2" (assert)
                  (("2" (rewrite "member_unif_prb_equiv")
                    (("2" (rewrite "member_unif_prb_equiv")
                      (("2" (skolem -1 "up")
                        (("2" (inst 1 "up")
                          (("2" (assert)
                            (("2" (flatten)
                              (("2"
                                (assert)
                                (("2"
                                  (split 1)
                                  (("1" (propax) nil nil)
                                   ("2"
                                    (use "choose_ac_unif_pair")
                                    (("2" (assert) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((atom type-eq-decl nil atoms nil) (perm type-eq-decl nil atoms nil)
    (f_symbol type-eq-decl nil term_properties nil)
    (ac_symbol type-eq-decl nil term_properties nil)
    (term type-decl nil term_adt nil)
    (variable type-eq-decl nil term_properties nil)
    (unif_prb type-eq-decl nil unification nil)
    (unif_pair type-eq-decl nil unification nil)
    (subterms_mem formula-decl nil unification nil)
    (member_unif_prb_equiv formula-decl nil unification nil))
   shostak))
 (choose_ac2_well_formed 0
  (choose_ac2_well_formed-1 nil 3884351446
   ("" (skeep)
    (("" (expand "well_formed?")
      (("" (prop)
        (("1" (name-replace "t1" "choose_ac(P)`2`1")
          (("1" (expand "well_formed?" 1)
            (("1" (case "member(t1, P)")
              (("1" (prop)
                (("1" (inst -4 "t1") (("1" (assert) nil nil)) nil)
                 ("2" (skolem 1 "t1s")
                  (("2" (flatten)
                    (("2" (inst -5 "t1s")
                      (("2" (assert)
                        (("2" (rewrite "subterms_mem_unif_prb")
                          (("2" (inst 2 "t1") (("2" (assert) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (hide 2)
                (("2" (hide -2)
                  (("2" (use "choose_ac2_mem")
                    (("2" (assert)
                      (("2" (expand "t1")
                        (("2" (rewrite "member_unif_prb_equiv")
                          (("2" (inst?) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (name-replace "t1" "choose_ac(P)`2`2")
          (("2" (expand "well_formed?" 1)
            (("2" (case "member(t1, P)")
              (("1" (prop)
                (("1" (inst -4 "t1") (("1" (assert) nil nil)) nil)
                 ("2" (skolem 1 "t1s")
                  (("2" (inst -3 "t1s")
                    (("2" (flatten)
                      (("2" (assert)
                        (("2" (rewrite "subterms_mem_unif_prb")
                          (("2" (inst 2 "t1") (("2" (assert) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (hide 2 -2)
                (("2" (use "choose_ac2_mem")
                  (("2" (expand "t1")
                    (("2" (assert)
                      (("2" (rewrite "member_unif_prb_equiv")
                        (("2" (inst?) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((atom type-eq-decl nil atoms nil) (perm type-eq-decl nil atoms nil)
    (f_symbol type-eq-decl nil term_properties nil)
    (ac_symbol type-eq-decl nil term_properties nil)
    (term type-decl nil term_adt nil)
    (variable type-eq-decl nil term_properties nil)
    (unif_pair type-eq-decl nil unification nil)
    (unif_prb type-eq-decl nil unification nil)
    (subterms_mem_unif_prb formula-decl nil unification nil)
    (member_unif_prb_equiv formula-decl nil unification nil))
   shostak))
 (choose_ac_match_problem 0
  (choose_ac_match_problem-1 nil 3884260176
   ("" (skeep)
    (("" (expand "match_problem?")
      (("" (skeep)
        (("" (inst -1 "X")
          (("" (assert)
            (("" (rewrite "vars_args")
              (("" (rewrite "vars_args")
                (("" (skeep)
                  (("" (inst 1 "t")
                    (("" (assert)
                      (("" (expand "rhs")
                        (("" (rewrite "sec_proj_mem")
                          (("" (rewrite "sec_proj_mem")
                            (("" (skolem -1 "up")
                              ((""
                                (flatten)
                                ((""
                                  (inst 1 "up")
                                  ((""
                                    (assert)
                                    ((""
                                      (use "choose_ac_unif_pair")
                                      (("" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((match_problem? const-decl "bool" unification nil)
    (variable type-eq-decl nil term_properties nil)
    (vars_args formula-decl nil term_properties nil)
    (atom type-eq-decl nil atoms nil) (perm type-eq-decl nil atoms nil)
    (f_symbol type-eq-decl nil term_properties nil)
    (ac_symbol type-eq-decl nil term_properties nil)
    (term type-decl nil term_adt nil)
    (args type-eq-decl nil term_properties nil)
    (unif_pair type-eq-decl nil unification nil)
    (unif_prb type-eq-decl nil unification nil)
    (rhs const-decl "args" unification nil)
    (sec_proj_mem formula-decl nil list_theory2 nil))
   shostak))
 (choose_ac_match_problem_subset 0
  (choose_ac_match_problem_subset-1 nil 3884353324
   ("" (skeep)
    (("" (name-replace "t" "choose_ac(P)`2`2")
      (("" (reveal -1)
        (("" (expand "match_problem?" -2)
          (("" (expand "subset?" 1)
            (("" (skeep)
              (("" (inst?)
                (("" (assert)
                  (("" (rewrite "vars_args")
                    (("" (inst 1 "t")
                      (("" (assert)
                        (("" (use "choose_ac_rhs")
                          (("" (assert) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((atom type-eq-decl nil atoms nil) (perm type-eq-decl nil atoms nil)
    (f_symbol type-eq-decl nil term_properties nil)
    (ac_symbol type-eq-decl nil term_properties nil)
    (term type-decl nil term_adt nil)
    (variable type-eq-decl nil term_properties nil)
    (unif_pair type-eq-decl nil unification nil)
    (unif_prb type-eq-decl nil unification nil)
    (match_problem? const-decl "bool" unification nil)
    (rhs const-decl "args" unification nil)
    (args type-eq-decl nil term_properties nil)
    (vars_args formula-decl nil term_properties nil))
   shostak))
 (apply_ac_TCC1 0
  (apply_ac_TCC1-1 nil 3884076175
   ("" (skeep)
    (("" (skeep)
      (("" (skeep)
        (("" (typepred "input")
          (("" (expand "nice_input?")
            (("" (replace -2 :dir rl)
              (("" (replace -3 :dir rl)
                (("" (replace -4 :dir rl)
                  (("" (replace -5 :dir rl)
                    (("" (replace -6 :dir rl)
                      (("" (prop)
                        (("1" (hide-all-but (-2 -18 1))
                          (("1" (use "choose_ac_vars")
                            (("1" (replace -3 :dir rl)
                              (("1"
                                (expand "disjoint?")
                                (("1"
                                  (expand "empty?")
                                  (("1"
                                    (skeep)
                                    (("1"
                                      (inst?)
                                      (("1" (grind) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (hide-all-but (-4 -18 1))
                          (("2" (use "choose_ac_vars")
                            (("2" (expand "subset?")
                              (("2"
                                (skeep)
                                (("2" (grind) nil nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("3" (hide-all-but (-18 -7 1))
                          (("3" (replace -2 1)
                            (("3" (use "choose_ac_well_formed")
                              (("3" (assert) nil nil)) nil))
                            nil))
                          nil)
                         ("4" (hide-all-but (-18 -9 1))
                          (("4" (lemma "choose_ac_match_problem")
                            (("4" (inst -1 "P" "PV")
                              (("4" (assert) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((subs const-decl "term" substitution nil)
    (dom const-decl "finite_set[variable]" substitution nil)
    (atom type-eq-decl nil atoms nil)
    (variable type-eq-decl nil term_properties nil)
    (fresh_context type-eq-decl nil freshness nil)
    (perm type-eq-decl nil atoms nil)
    (f_symbol type-eq-decl nil term_properties nil)
    (ac_symbol type-eq-decl nil term_properties nil)
    (term type-decl nil term_adt nil)
    (unif_pair type-eq-decl nil unification nil)
    (unif_prb type-eq-decl nil unification nil)
    (basic_sub type-eq-decl nil substitution nil)
    (sub type-eq-decl nil substitution nil))
   nil
   (apply_ac subtype
    "(ac_step.G, ac_step.P1, ac_step.sigma, ac_step.V, ac_step.PV)"
    "nice_input")))
 (apply_ac_TCC2 0
  (apply_ac_TCC2-1 nil 3884076175
   ("" (skeep)
    (("" (skeep)
      (("" (skeep)
        (("" (rewrite "every_nth")
          (("" (skeep)
            (("" (typepred "i")
              (("" (expand "length" -1) (("" (assert) nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((atom type-eq-decl nil atoms nil)
    (variable type-eq-decl nil term_properties nil)
    (fresh_context type-eq-decl nil freshness nil)
    (perm type-eq-decl nil atoms nil)
    (f_symbol type-eq-decl nil term_properties nil)
    (ac_symbol type-eq-decl nil term_properties nil)
    (term type-decl nil term_adt nil)
    (unif_pair type-eq-decl nil unification nil)
    (unif_prb type-eq-decl nil unification nil)
    (basic_sub type-eq-decl nil substitution nil)
    (sub type-eq-decl nil substitution nil))
   nil
   (apply_ac subtype
    "list_adt[[freshness.fresh_context, unification.unif_prb, substitution.sub, finite_set[variable], finite_set[variable]]].null"
    "list[nice_input]")))
 (apply_ac_TCC3 0
  (apply_ac_TCC3-1 nil 3884076175
   ("" (skeep)
    (("" (skeep)
      (("" (skeep)
        (("" (skeep)
          (("" (lemma "exists_ac_is_ac")
            (("" (inst?) (("" (assert) nil nil)) nil)) nil))
          nil))
        nil))
      nil))
    nil)
   ((atom type-eq-decl nil atoms nil) (perm type-eq-decl nil atoms nil)
    (f_symbol type-eq-decl nil term_properties nil)
    (ac_symbol type-eq-decl nil term_properties nil)
    (term type-decl nil term_adt nil)
    (variable type-eq-decl nil term_properties nil)
    (unif_pair type-eq-decl nil unification nil)
    (unif_prb type-eq-decl nil unification nil))
   nil
   (apply_ac subtype "ac_step.t"
    "(term_adt[atom, atoms.perm, variable, f_symbol, ac_symbol].ac_app?)")))
 (apply_ac_TCC4 0
  (apply_ac_TCC4-1 nil 3884076175
   ("" (skeep)
    (("" (skeep)
      (("" (skeep)
        (("" (skeep)
          (("" (rewrite "every_nth")
            (("" (skeep)
              (("" (typepred "i")
                ((""
                  (name-replace "input1"
                   "nth(input_apply_ac(ac_results_subs, G, P1, sigma, new_V, PV), i)")
                  (("" (reveal -1)
                    (("" (lemma "member_nth[pre_nice_input]")
                      (("" (inst?)
                        (("" (inst -1 "input1")
                          (("" (prop)
                            (("1" (hide -2)
                              (("1"
                                (hide -2)
                                (("1"
                                  (rewrite "input_apply_ac_mem")
                                  (("1"
                                    (skolem -1 ("G1" "PI" "sigma1"))
                                    (("1"
                                      (flatten)
                                      (("1"
                                        (hide -7 2)
                                        (("1"
                                          (replace -21 -1 :hide? T)
                                          (("1"
                                            (expand "nice_input?" 2)
                                            (("1"
                                              (replace -2 :hide? t)
                                              (("1"
                                                (replace -2 :hide? t)
                                                (("1"
                                                  (replace -2 :hide? t)
                                                  (("1"
                                                    (replace
                                                     -2
                                                     :hide?
                                                     t)
                                                    (("1"
                                                      (replace
                                                       -2
                                                       :hide?
                                                       t)
                                                      (("1"
                                                        (use
                                                         "inst_step_mem")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (hide 2)
                                                            (("1"
                                                              (skolem
                                                               -1
                                                               "PC")
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (hide
                                                                   -5)
                                                                  (("1"
                                                                    (replace
                                                                     -17
                                                                     -1
                                                                     :hide?
                                                                     T)
                                                                    (("1"
                                                                      (typepred
                                                                       "input")
                                                                      (("1"
                                                                        (expand
                                                                         "nice_input?"
                                                                         -1)
                                                                        (("1"
                                                                          (replace
                                                                           -6
                                                                           :dir
                                                                           rl
                                                                           :hide?
                                                                           t)
                                                                          (("1"
                                                                            (replace
                                                                             -6
                                                                             :dir
                                                                             rl
                                                                             :hide?
                                                                             t)
                                                                            (("1"
                                                                              (replace
                                                                               -6
                                                                               :dir
                                                                               rl
                                                                               :hide?
                                                                               t)
                                                                              (("1"
                                                                                (replace
                                                                                 -6
                                                                                 :dir
                                                                                 rl
                                                                                 :hide?
                                                                                 t)
                                                                                (("1"
                                                                                  (replace
                                                                                   -6
                                                                                   :dir
                                                                                   rl
                                                                                   :hide?
                                                                                   t)
                                                                                  (("1"
                                                                                    (reveal
                                                                                     1)
                                                                                    (("1"
                                                                                      (hide
                                                                                       -6
                                                                                       -7
                                                                                       -8)
                                                                                      (("1"
                                                                                        (prop)
                                                                                        (("1"
                                                                                          (use
                                                                                           "inst_step_idempotent3")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (replace
                                                                                               -14
                                                                                               :dir
                                                                                               rl)
                                                                                              (("1"
                                                                                                (use
                                                                                                 "idempotent_append")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (hide
                                                                                                     2)
                                                                                                    (("1"
                                                                                                      (use
                                                                                                       "inst_step_vars_img")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -15
                                                                                                           :dir
                                                                                                           rl)
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -19
                                                                                                             -12)
                                                                                                            (("1"
                                                                                                              (use
                                                                                                               "solve_ac_vars2")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (prop)
                                                                                                                  (("1"
                                                                                                                    (hide-all-but
                                                                                                                     (-1
                                                                                                                      -2
                                                                                                                      1))
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "disjoint?")
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "empty?")
                                                                                                                        (("1"
                                                                                                                          (skeep)
                                                                                                                          (("1"
                                                                                                                            (inst?)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "subset?"
                                                                                                                               -1)
                                                                                                                              (("1"
                                                                                                                                (inst?)
                                                                                                                                (("1"
                                                                                                                                  (grind)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (hide-all-but
                                                                                                                     (-17
                                                                                                                      -18
                                                                                                                      1))
                                                                                                                    (("2"
                                                                                                                      (reveal
                                                                                                                       -24
                                                                                                                       -26)
                                                                                                                      (("2"
                                                                                                                        (use
                                                                                                                         "choose_ac2_mem")
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (replace
                                                                                                                             -3
                                                                                                                             :dir
                                                                                                                             rl)
                                                                                                                            (("2"
                                                                                                                              (decompose-equality)
                                                                                                                              (("2"
                                                                                                                                (case
                                                                                                                                 "up = (t, s)")
                                                                                                                                (("1"
                                                                                                                                  (replace
                                                                                                                                   -1)
                                                                                                                                  (("1"
                                                                                                                                    (propax)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (decompose-equality
                                                                                                                                   1)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (hide
                                                                                           -15
                                                                                           -16
                                                                                           -5
                                                                                           -6
                                                                                           -7
                                                                                           -8
                                                                                           -9)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "disjoint?"
                                                                                             1)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "empty?"
                                                                                               1)
                                                                                              (("2"
                                                                                                (skeep)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   ("member"
                                                                                                    "intersection")
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (flatten)
                                                                                                    (("2"
                                                                                                      (use
                                                                                                       "dom_append")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "subset?"
                                                                                                         -1)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -1
                                                                                                           "x")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (hide
                                                                                                               -3)
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 ("member"
                                                                                                                  "union")
                                                                                                                 -1)
                                                                                                                (("2"
                                                                                                                  (prop)
                                                                                                                  (("1"
                                                                                                                    (rewrite
                                                                                                                     "vars_unif_prb_append")
                                                                                                                    (("1"
                                                                                                                      (prop)
                                                                                                                      (("1"
                                                                                                                        (use
                                                                                                                         "inst_step_vars_unif")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (replace
                                                                                                                             -11
                                                                                                                             :dir
                                                                                                                             rl)
                                                                                                                            (("1"
                                                                                                                              (replace
                                                                                                                               -10
                                                                                                                               :dir
                                                                                                                               rl)
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "disjoint?"
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "empty?")
                                                                                                                                  (("1"
                                                                                                                                    (inst
                                                                                                                                     -1
                                                                                                                                     "x")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       ("member"
                                                                                                                                        "intersection")
                                                                                                                                       1)
                                                                                                                                      (("1"
                                                                                                                                        (propax)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (use
                                                                                                                         "apply_sub_elim_var2")
                                                                                                                        (("2"
                                                                                                                          (prop)
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "disjoint?"
                                                                                                                             -1)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "empty?")
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 -1
                                                                                                                                 "x")
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   ("member"
                                                                                                                                    "intersection")
                                                                                                                                   1)
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (use
                                                                                                                             "inst_step_idempotent3")
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (case
                                                                                                                     "disjoint?(dom(sigma), vars(PC))")
                                                                                                                    (("1"
                                                                                                                      (rewrite
                                                                                                                       "vars_unif_prb_append")
                                                                                                                      (("1"
                                                                                                                        (prop)
                                                                                                                        (("1"
                                                                                                                          (use
                                                                                                                           "inst_step_vars_unif2")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (replace
                                                                                                                               -11
                                                                                                                               :dir
                                                                                                                               rl)
                                                                                                                              (("1"
                                                                                                                                (hide-all-but
                                                                                                                                 (-1
                                                                                                                                  -2
                                                                                                                                  -3
                                                                                                                                  -4))
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "disjoint?"
                                                                                                                                   -3)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "empty?"
                                                                                                                                     -3)
                                                                                                                                    (("1"
                                                                                                                                      (inst?)
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "subset?"
                                                                                                                                         -1)
                                                                                                                                        (("1"
                                                                                                                                          (grind)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (case
                                                                                                                           "member(x, vars(PC))")
                                                                                                                          (("1"
                                                                                                                            (hide-all-but
                                                                                                                             (-1
                                                                                                                              -3
                                                                                                                              -4))
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "disjoint?")
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "empty?")
                                                                                                                                (("1"
                                                                                                                                  (grind)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (use
                                                                                                                             "apply_sub_vars")
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "subset?"
                                                                                                                               -1)
                                                                                                                              (("2"
                                                                                                                                (inst?)
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     ("member"
                                                                                                                                      "union")
                                                                                                                                     -1)
                                                                                                                                    (("2"
                                                                                                                                      (prop)
                                                                                                                                      (("1"
                                                                                                                                        (use
                                                                                                                                         "inst_step_vars_img")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (replace
                                                                                                                                             -13
                                                                                                                                             :dir
                                                                                                                                             rl)
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "subset?"
                                                                                                                                               -1)
                                                                                                                                              (("1"
                                                                                                                                                (inst?)
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (hide-all-but
                                                                                                                                         (-1
                                                                                                                                          -4
                                                                                                                                          -6
                                                                                                                                          -13))
                                                                                                                                        (("2"
                                                                                                                                          (expand
                                                                                                                                           "disjoint?"
                                                                                                                                           -3)
                                                                                                                                          (("2"
                                                                                                                                            (expand
                                                                                                                                             "empty?"
                                                                                                                                             -3)
                                                                                                                                            (("2"
                                                                                                                                              (inst
                                                                                                                                               -3
                                                                                                                                               "x")
                                                                                                                                              (("2"
                                                                                                                                                (expand
                                                                                                                                                 ("member"
                                                                                                                                                  "intersection")
                                                                                                                                                 1)
                                                                                                                                                (("2"
                                                                                                                                                  (use
                                                                                                                                                   "choose_ac_vars")
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "subset?"
                                                                                                                                                     -1)
                                                                                                                                                    (("2"
                                                                                                                                                      (inst?)
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (replace
                                                                                                                       -12
                                                                                                                       -7)
                                                                                                                      (("2"
                                                                                                                        (use
                                                                                                                         "solve_ac_vars2")
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (prop)
                                                                                                                            (("1"
                                                                                                                              (hide-all-but
                                                                                                                               (-1
                                                                                                                                1))
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "disjoint?")
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "empty?")
                                                                                                                                  (("1"
                                                                                                                                    (skeep)
                                                                                                                                    (("1"
                                                                                                                                      (grind)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (hide-all-but
                                                                                                                               1)
                                                                                                                              (("2"
                                                                                                                                (reveal
                                                                                                                                 -24
                                                                                                                                 -25
                                                                                                                                 -26
                                                                                                                                 -28)
                                                                                                                                (("2"
                                                                                                                                  (use
                                                                                                                                   "choose_ac2_mem")
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (replace
                                                                                                                                       -5
                                                                                                                                       :dir
                                                                                                                                       rl)
                                                                                                                                      (("2"
                                                                                                                                        (case
                                                                                                                                         "up = (t, s)")
                                                                                                                                        (("1"
                                                                                                                                          (replace
                                                                                                                                           -1)
                                                                                                                                          (("1"
                                                                                                                                            (propax)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (assert)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("3"
                                                                                          (use
                                                                                           "contained_append")
                                                                                          (("3"
                                                                                            (assert)
                                                                                            (("3"
                                                                                              (hide
                                                                                               2)
                                                                                              (("3"
                                                                                                (prop)
                                                                                                (("1"
                                                                                                  (lemma
                                                                                                   "contained_supset")
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -1
                                                                                                     "sigma1"
                                                                                                     "vars(PC)"
                                                                                                     "new_V")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (prop)
                                                                                                        (("1"
                                                                                                          (use
                                                                                                           "inst_step_cont")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (replace
                                                                                                           -17
                                                                                                           -18)
                                                                                                          (("2"
                                                                                                            (use
                                                                                                             "solve_ac_first_proj_sec_proj_vars2")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (hide-all-but
                                                                                                                 (-4
                                                                                                                  -15
                                                                                                                  -16
                                                                                                                  1))
                                                                                                                (("2"
                                                                                                                  (reveal
                                                                                                                   -22)
                                                                                                                  (("2"
                                                                                                                    (use
                                                                                                                     "choose_ac_vars2")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "subset?")
                                                                                                                      (("2"
                                                                                                                        (skeep)
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -4
                                                                                                                           "x")
                                                                                                                          (("2"
                                                                                                                            (inst
                                                                                                                             -1
                                                                                                                             "x")
                                                                                                                            (("2"
                                                                                                                              (replace
                                                                                                                               -2
                                                                                                                               :dir
                                                                                                                               rl)
                                                                                                                              (("2"
                                                                                                                                (grind)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (lemma
                                                                                                   "contained_supset")
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     -1
                                                                                                     "sigma"
                                                                                                     "V"
                                                                                                     "new_V")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (replace
                                                                                                         -17
                                                                                                         -18)
                                                                                                        (("2"
                                                                                                          (replace
                                                                                                           -17
                                                                                                           -10)
                                                                                                          (("2"
                                                                                                            (use
                                                                                                             "solve_ac_sec_proj_vars2")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("4"
                                                                                          (hide
                                                                                           -5
                                                                                           -6
                                                                                           -7
                                                                                           -8
                                                                                           -9
                                                                                           2)
                                                                                          (("4"
                                                                                            (case
                                                                                             "subset?(vars(PC), new_V)")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "subset?"
                                                                                               1)
                                                                                              (("1"
                                                                                                (skeep)
                                                                                                (("1"
                                                                                                  (rewrite
                                                                                                   "vars_unif_prb_append")
                                                                                                  (("1"
                                                                                                    (prop)
                                                                                                    (("1"
                                                                                                      (use
                                                                                                       "inst_step_vars_unif2")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -10
                                                                                                           :dir
                                                                                                           rl)
                                                                                                          (("1"
                                                                                                            (hide-all-but
                                                                                                             (-1
                                                                                                              -2
                                                                                                              -3
                                                                                                              1))
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "subset?")
                                                                                                              (("1"
                                                                                                                (grind)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (use
                                                                                                       "apply_sub_vars")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "subset?"
                                                                                                         -1)
                                                                                                        (("2"
                                                                                                          (inst?)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (hide
                                                                                                               -2)
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 ("member"
                                                                                                                  "union")
                                                                                                                 -1)
                                                                                                                (("2"
                                                                                                                  (prop)
                                                                                                                  (("1"
                                                                                                                    (use
                                                                                                                     "inst_step_vars_img")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (replace
                                                                                                                         -11
                                                                                                                         :dir
                                                                                                                         rl)
                                                                                                                        (("1"
                                                                                                                          (hide-all-but
                                                                                                                           (-1
                                                                                                                            -2
                                                                                                                            -3
                                                                                                                            1))
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "subset?")
                                                                                                                            (("1"
                                                                                                                              (grind)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (case
                                                                                                                     "subset?(V, new_V)")
                                                                                                                    (("1"
                                                                                                                      (hide-all-but
                                                                                                                       (-1
                                                                                                                        -2
                                                                                                                        -7
                                                                                                                        1))
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "subset?")
                                                                                                                        (("1"
                                                                                                                          (inst?)
                                                                                                                          (("1"
                                                                                                                            (inst?)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (reveal
                                                                                                                                 -11)
                                                                                                                                (("1"
                                                                                                                                  (use
                                                                                                                                   "choose_ac_vars")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "subset?")
                                                                                                                                    (("1"
                                                                                                                                      (inst?)
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (replace
                                                                                                                       -14)
                                                                                                                      (("2"
                                                                                                                        (use
                                                                                                                         "solve_ac_sec_proj_vars2")
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (replace
                                                                                               -12
                                                                                               -5)
                                                                                              (("2"
                                                                                                (use
                                                                                                 "solve_ac_first_proj_sec_proj_vars2")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (hide-all-but
                                                                                                     (-10
                                                                                                      -11
                                                                                                      1
                                                                                                      -4))
                                                                                                    (("2"
                                                                                                      (reveal
                                                                                                       -19)
                                                                                                      (("2"
                                                                                                        (use
                                                                                                         "choose_ac_vars2")
                                                                                                        (("2"
                                                                                                          (replace
                                                                                                           -2
                                                                                                           :dir
                                                                                                           rl)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "subset?")
                                                                                                            (("2"
                                                                                                              (skeep)
                                                                                                              (("2"
                                                                                                                (inst?)
                                                                                                                (("2"
                                                                                                                  (inst?)
                                                                                                                  (("2"
                                                                                                                    (grind)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("5"
                                                                                          (use
                                                                                           "inst_step_vars_context")
                                                                                          (("5"
                                                                                            (assert)
                                                                                            (("5"
                                                                                              (replace
                                                                                               -12
                                                                                               :dir
                                                                                               rl)
                                                                                              (("5"
                                                                                                (hide
                                                                                                 -5
                                                                                                 -8
                                                                                                 -9
                                                                                                 -7
                                                                                                 -10
                                                                                                 -15
                                                                                                 -16
                                                                                                 -17)
                                                                                                (("5"
                                                                                                  (expand
                                                                                                   "subset?"
                                                                                                   1)
                                                                                                  (("5"
                                                                                                    (skeep)
                                                                                                    (("5"
                                                                                                      (expand
                                                                                                       "subset?"
                                                                                                       -1)
                                                                                                      (("5"
                                                                                                        (inst?)
                                                                                                        (("5"
                                                                                                          (assert)
                                                                                                          (("5"
                                                                                                            (hide
                                                                                                             -2)
                                                                                                            (("5"
                                                                                                              (expand
                                                                                                               ("member"
                                                                                                                "union")
                                                                                                               -1)
                                                                                                              (("5"
                                                                                                                (prop)
                                                                                                                (("1"
                                                                                                                  (case
                                                                                                                   "subset?(V, new_V)")
                                                                                                                  (("1"
                                                                                                                    (hide-all-but
                                                                                                                     (-1
                                                                                                                      -2
                                                                                                                      -6
                                                                                                                      1))
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "subset?")
                                                                                                                      (("1"
                                                                                                                        (grind)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (replace
                                                                                                                     -10)
                                                                                                                    (("2"
                                                                                                                      (use
                                                                                                                       "solve_ac_sec_proj_vars2")
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (replace
                                                                                                                   -10
                                                                                                                   -6)
                                                                                                                  (("2"
                                                                                                                    (use
                                                                                                                     "solve_ac_first_proj_sec_proj_vars2")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (prop)
                                                                                                                        (("1"
                                                                                                                          (replace
                                                                                                                           -11
                                                                                                                           :dir
                                                                                                                           rl)
                                                                                                                          (("1"
                                                                                                                            (replace
                                                                                                                             -12
                                                                                                                             :dir
                                                                                                                             rl)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "subset?")
                                                                                                                              (("1"
                                                                                                                                (inst?)
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (hide-all-but
                                                                                                                           1)
                                                                                                                          (("2"
                                                                                                                            (reveal
                                                                                                                             -15
                                                                                                                             -20
                                                                                                                             -21
                                                                                                                             -22
                                                                                                                             -26)
                                                                                                                            (("2"
                                                                                                                              (use
                                                                                                                               "choose_ac_vars2")
                                                                                                                              (("2"
                                                                                                                                (replace
                                                                                                                                 -6
                                                                                                                                 :dir
                                                                                                                                 rl)
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "subset?")
                                                                                                                                  (("2"
                                                                                                                                    (skeep)
                                                                                                                                    (("2"
                                                                                                                                      (inst?)
                                                                                                                                      (("2"
                                                                                                                                        (inst?)
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("6"
                                                                                          (case
                                                                                           "subset?(V, new_V)")
                                                                                          (("1"
                                                                                            (hide-all-but
                                                                                             (-1
                                                                                              -7
                                                                                              1))
                                                                                            (("1"
                                                                                              (expand
                                                                                               "subset?")
                                                                                              (("1"
                                                                                                (skeep)
                                                                                                (("1"
                                                                                                  (inst?)
                                                                                                  (("1"
                                                                                                    (inst?)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (hide
                                                                                             -4
                                                                                             -5
                                                                                             -6
                                                                                             -7
                                                                                             -8
                                                                                             -9)
                                                                                            (("2"
                                                                                              (replace
                                                                                               -11)
                                                                                              (("2"
                                                                                                (use
                                                                                                 "solve_ac_sec_proj_vars2")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("7"
                                                                                          (hide
                                                                                           -2
                                                                                           -3
                                                                                           -9
                                                                                           2)
                                                                                          (("7"
                                                                                            (case
                                                                                             "well_formed?(PC)")
                                                                                            (("1"
                                                                                              (rewrite
                                                                                               "well_formed_unif_prb_append")
                                                                                              (("1"
                                                                                                (prop)
                                                                                                (("1"
                                                                                                  (use
                                                                                                   "inst_step_well_formed2")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (use
                                                                                                   "well_formed_apply_sub")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (prop)
                                                                                                      (("1"
                                                                                                        (hide-all-but
                                                                                                         (-6
                                                                                                          -12
                                                                                                          1))
                                                                                                        (("1"
                                                                                                          (use
                                                                                                           "choose_ac_well_formed")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (use
                                                                                                         "inst_step_well_formed")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (replace
                                                                                               -14
                                                                                               -7)
                                                                                              (("2"
                                                                                                (use
                                                                                                 "solve_ac_well_formed")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (hide-all-but
                                                                                                     (-5
                                                                                                      -12
                                                                                                      -13
                                                                                                      1))
                                                                                                    (("2"
                                                                                                      (reveal
                                                                                                       -19)
                                                                                                      (("2"
                                                                                                        (reveal
                                                                                                         -17)
                                                                                                        (("2"
                                                                                                          (lemma
                                                                                                           "choose_ac2_mem")
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             -1
                                                                                                             "P")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -3
                                                                                                                 :dir
                                                                                                                 rl)
                                                                                                                (("2"
                                                                                                                  (use
                                                                                                                   "choose_ac2_well_formed")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "well_formed?"
                                                                                                                       -1)
                                                                                                                      (("2"
                                                                                                                        (flatten)
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("8"
                                                                                          (rewrite
                                                                                           "well_formed_append")
                                                                                          (("8"
                                                                                            (hide
                                                                                             2
                                                                                             3
                                                                                             -2
                                                                                             -3
                                                                                             -14
                                                                                             -15
                                                                                             -16)
                                                                                            (("8"
                                                                                              (case
                                                                                               "well_formed?(PC)")
                                                                                              (("1"
                                                                                                (use
                                                                                                 "inst_step_well_formed")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (replace
                                                                                                 -12
                                                                                                 -8)
                                                                                                (("2"
                                                                                                  (use
                                                                                                   "solve_ac_well_formed")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (hide-all-but
                                                                                                       (-5
                                                                                                        1))
                                                                                                      (("2"
                                                                                                        (reveal
                                                                                                         -17
                                                                                                         -18
                                                                                                         -19
                                                                                                         -21)
                                                                                                        (("2"
                                                                                                          (use
                                                                                                           "choose_ac2_well_formed")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "well_formed?"
                                                                                                               -1)
                                                                                                              (("2"
                                                                                                                (flatten)
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("9"
                                                                                          (hide
                                                                                           -7
                                                                                           -8
                                                                                           -2
                                                                                           -3)
                                                                                          (("9"
                                                                                            (rewrite
                                                                                             "match_prb_append")
                                                                                            (("9"
                                                                                              (prop)
                                                                                              (("1"
                                                                                                (use
                                                                                                 "inst_step_match")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -13
                                                                                                       -6)
                                                                                                      (("1"
                                                                                                        (use
                                                                                                         "solve_ac_match_condition")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (hide
                                                                                                             2
                                                                                                             3
                                                                                                             4)
                                                                                                            (("1"
                                                                                                              (prop)
                                                                                                              (("1"
                                                                                                                (hide-all-but
                                                                                                                 (-5
                                                                                                                  -12
                                                                                                                  1))
                                                                                                                (("1"
                                                                                                                  (reveal
                                                                                                                   -19
                                                                                                                   -21)
                                                                                                                  (("1"
                                                                                                                    (use
                                                                                                                     "choose_ac_match_problem_subset")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (expand
                                                                                                                 "subset?"
                                                                                                                 1)
                                                                                                                (("2"
                                                                                                                  (skeep)
                                                                                                                  (("2"
                                                                                                                    (rewrite
                                                                                                                     "mem_lst2set"
                                                                                                                     1
                                                                                                                     :dir
                                                                                                                     rl)
                                                                                                                    (("2"
                                                                                                                      (rewrite
                                                                                                                       "finset2list_mem")
                                                                                                                      (("2"
                                                                                                                        (hide-all-but
                                                                                                                         (-1
                                                                                                                          -12
                                                                                                                          -13
                                                                                                                          -3
                                                                                                                          1))
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "subset?"
                                                                                                                           -2)
                                                                                                                          (("2"
                                                                                                                            (inst?)
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (reveal
                                                                                                                                 -21)
                                                                                                                                (("2"
                                                                                                                                  (use
                                                                                                                                   "choose_ac_vars2")
                                                                                                                                  (("2"
                                                                                                                                    (replace
                                                                                                                                     -2)
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "subset?"
                                                                                                                                       -1)
                                                                                                                                      (("2"
                                                                                                                                        (inst?)
                                                                                                                                        (("2"
                                                                                                                                          (replace
                                                                                                                                           -2
                                                                                                                                           :dir
                                                                                                                                           rl)
                                                                                                                                          (("2"
                                                                                                                                            (grind)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (use
                                                                                                 "match_prb_apply_sub")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (hide
                                                                                                     2)
                                                                                                    (("2"
                                                                                                      (prop)
                                                                                                      (("1"
                                                                                                        (hide-all-but
                                                                                                         (-5
                                                                                                          -10
                                                                                                          1))
                                                                                                        (("1"
                                                                                                          (lemma
                                                                                                           "choose_ac_match_problem")
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -1
                                                                                                             "P"
                                                                                                             "PV")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (lemma
                                                                                                         "inst_step_match_img2")
                                                                                                        (("2"
                                                                                                          (inst?)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (use
                                                                                                                 "solve_ac_match_condition")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (prop)
                                                                                                                    (("1"
                                                                                                                      (hide-all-but
                                                                                                                       (-5
                                                                                                                        -12
                                                                                                                        1))
                                                                                                                      (("1"
                                                                                                                        (reveal
                                                                                                                         -20
                                                                                                                         -22)
                                                                                                                        (("1"
                                                                                                                          (use
                                                                                                                           "choose_ac_match_problem_subset")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (replace
                                                                                                                       -13
                                                                                                                       1)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "subset?"
                                                                                                                         1)
                                                                                                                        (("2"
                                                                                                                          (skeep)
                                                                                                                          (("2"
                                                                                                                            (rewrite
                                                                                                                             "mem_lst2set"
                                                                                                                             1
                                                                                                                             :dir
                                                                                                                             rl)
                                                                                                                            (("2"
                                                                                                                              (hide
                                                                                                                               2)
                                                                                                                              (("2"
                                                                                                                                (rewrite
                                                                                                                                 "finset2list_mem")
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "subset?"
                                                                                                                                   -3)
                                                                                                                                  (("2"
                                                                                                                                    (inst?)
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      (("2"
                                                                                                                                        (hide-all-but
                                                                                                                                         (-1
                                                                                                                                          -11
                                                                                                                                          -12
                                                                                                                                          4))
                                                                                                                                        (("2"
                                                                                                                                          (reveal
                                                                                                                                           -20
                                                                                                                                           -22)
                                                                                                                                          (("2"
                                                                                                                                            (use
                                                                                                                                             "choose_ac_vars2")
                                                                                                                                            (("2"
                                                                                                                                              (replace
                                                                                                                                               -3
                                                                                                                                               :dir
                                                                                                                                               rl)
                                                                                                                                              (("2"
                                                                                                                                                (expand
                                                                                                                                                 "subset?")
                                                                                                                                                (("2"
                                                                                                                                                  (inst?)
                                                                                                                                                  (("2"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (inst 1 "i") (("2" (assert) nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((atom type-eq-decl nil atoms nil)
    (variable type-eq-decl nil term_properties nil)
    (fresh_context type-eq-decl nil freshness nil)
    (perm type-eq-decl nil atoms nil)
    (f_symbol type-eq-decl nil term_properties nil)
    (ac_symbol type-eq-decl nil term_properties nil)
    (term type-decl nil term_adt nil)
    (unif_pair type-eq-decl nil unification nil)
    (unif_prb type-eq-decl nil unification nil)
    (basic_sub type-eq-decl nil substitution nil)
    (sub type-eq-decl nil substitution nil)
    (inst_step_mem formula-decl nil inst_step nil)
    (idempotent_append formula-decl nil substitution nil)
    (subs const-decl "term" substitution nil)
    (dom const-decl "finite_set[variable]" substitution nil)
    (img const-decl
     "finite_set[term[atom, perm, variable, f_symbol, ac_symbol]]"
     substitution nil)
    (ac_sym adt-accessor-decl "[(ac_app?) -> ac_symbol]" term_adt nil)
    (ac_app? adt-recognizer-decl "[term -> boolean]" term_adt nil)
    (solve_ac_vars2 formula-decl nil aux_unification nil)
    (inst_step_vars_img formula-decl nil inst_step nil)
    (inst_step_idempotent3 formula-decl nil inst_step nil)
    (inst_step_vars_unif2 formula-decl nil inst_step nil)
    (apply_sub_vars formula-decl nil unification nil)
    (apply_sub def-decl "unif_prb" unification nil)
    (vars_unif_prb_append formula-decl nil unification nil)
    (apply_sub_elim_var2 formula-decl nil unification nil)
    (inst_step_vars_unif formula-decl nil inst_step nil)
    (dom_append formula-decl nil substitution nil)
    (inst_step_cont formula-decl nil inst_step nil)
    (solve_ac_first_proj_sec_proj_vars2 formula-decl nil
     aux_unification nil)
    (size const-decl "nat" unification nil)
    (ac_prb? const-decl "bool" unification nil)
    (vars const-decl "finite_set[variable]" unification nil)
    (contained_supset formula-decl nil substitution nil)
    (solve_ac_sec_proj_vars2 formula-decl nil aux_unification nil)
    (contained_append formula-decl nil substitution nil)
    (inst_step_vars_context formula-decl nil inst_step nil)
    (inst_step_well_formed2 formula-decl nil inst_step nil)
    (inst_step_well_formed formula-decl nil inst_step nil)
    (well_formed_apply_sub formula-decl nil unification nil)
    (well_formed_unif_prb_append formula-decl nil unification nil)
    (solve_ac_well_formed formula-decl nil aux_unification nil)
    (finset2list def-decl "list[T]" list_theory nil)
    (well_formed_append formula-decl nil substitution nil)
    (match_prb_append formula-decl nil unification nil)
    (match_prb_apply_sub formula-decl nil unification nil)
    (inst_step_match_img2 formula-decl nil inst_step nil)
    (inst_step_match formula-decl nil inst_step nil)
    (solve_ac_match_condition formula-decl nil aux_unification nil)
    (mem_lst2set formula-decl nil list_theory nil)
    (finset2list_mem formula-decl nil list_theory nil))
   nil
   (apply_ac subtype
    "ac_step.input_apply_ac(ac_step.ac_results_subs, ac_step.G, ac_step.P1, ac_step.sigma, ac_step.new_V, ac_step.PV)"
    "list[nice_input]")))
 (apply_ac_vars 0
  (apply_ac_vars-1 nil 3884076182
   ("" (skeep)
    (("" (assert)
      (("" (prop)
        (("" (expand "apply_ac" -1)
          (("" (name-replace "G" "input`1")
            (("" (name-replace "P" "input`2")
              (("" (name-replace "sig" "input`3")
                (("" (name-replace "V" "input`4")
                  (("" (name-replace "PV" "input`5")
                    (("" (lift-if)
                      (("" (split)
                        (("1" (flatten)
                          (("1" (expand "member" -2)
                            (("1" (propax) nil nil)) nil))
                          nil)
                         ("2" (flatten)
                          (("2" (name-replace "P_r" "choose_ac(P)`3")
                            (("2" (name-replace "up" "choose_ac(P)`2")
                              (("2"
                                (name-replace "t" "up`1")
                                (("2"
                                  (name-replace "s" "up`2")
                                  (("2"
                                    (name-replace
                                     "lst_V"
                                     "finset2list[variable](V)")
                                    (("2"
                                      (name-replace
                                       "ac_results"
                                       "first_proj(solve_ac(G, s, t, lst_V, ac_sym(t), PV))")
                                      (("1"
                                        (name-replace
                                         "new_V"
                                         "vars(sec_proj(solve_ac(G, s, t, lst_V, ac_sym(t), PV)))")
                                        (("1"
                                          (name-replace
                                           "ac_results_subs"
                                           "inst_step(PV, G, ac_results)")
                                          (("1"
                                            (split -2)
                                            (("1"
                                              (flatten)
                                              (("1"
                                                (expand "member" -2)
                                                (("1"
                                                  (prop)
                                                  (("1"
                                                    (replace -1 2)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (hide-all-but
                                                         2)
                                                        (("1"
                                                          (expand
                                                           "P_r")
                                                          (("1"
                                                            (use
                                                             "choose_ac_vars")
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (expand
                                                     "member"
                                                     -1)
                                                    (("2"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (flatten)
                                              (("2"
                                                (rewrite
                                                 "input_apply_ac_mem")
                                                (("2"
                                                  (skolem
                                                   -1
                                                   ("G1" "PI" "sig1"))
                                                  (("2"
                                                    (flatten)
                                                    (("2"
                                                      (replace -3 3)
                                                      (("2"
                                                        (hide
                                                         -2
                                                         -3
                                                         -4
                                                         -5
                                                         -6)
                                                        (("2"
                                                          (expand
                                                           "ac_results_subs"
                                                           -1)
                                                          (("2"
                                                            (use
                                                             "inst_step_mem")
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (skolem
                                                                 -1
                                                                 "Pc")
                                                                (("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (hide
                                                                     -5)
                                                                    (("2"
                                                                      (expand
                                                                       "ac_results"
                                                                       -1)
                                                                      (("2"
                                                                        (expand
                                                                         "lst_V"
                                                                         -1)
                                                                        (("2"
                                                                          (expand
                                                                           "subset?"
                                                                           4)
                                                                          (("2"
                                                                            (skeep)
                                                                            (("2"
                                                                              (rewrite
                                                                               "vars_unif_prb_append")
                                                                              (("2"
                                                                                (case
                                                                                 "member(x, vars(PI)) OR member(x, vars(img(sig1))) OR member(x, vars(P_r))")
                                                                                (("1"
                                                                                  (hide
                                                                                   -7)
                                                                                  (("1"
                                                                                    (case
                                                                                     "member(x, vars(P_r))")
                                                                                    (("1"
                                                                                      (hide
                                                                                       -2)
                                                                                      (("1"
                                                                                        (hide-all-but
                                                                                         (-1
                                                                                          4))
                                                                                        (("1"
                                                                                          (expand
                                                                                           "P_r")
                                                                                          (("1"
                                                                                            (use
                                                                                             "choose_ac_vars")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "subset?")
                                                                                              (("1"
                                                                                                (inst?)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (hide
                                                                                         1)
                                                                                        (("2"
                                                                                          (case
                                                                                           "member(x, vars(Pc))")
                                                                                          (("1"
                                                                                            (hide
                                                                                             -2)
                                                                                            (("1"
                                                                                              (case
                                                                                               "member(x, vars(lhs(Pc)))")
                                                                                              (("1"
                                                                                                (use
                                                                                                 "solve_ac_vars_lhs")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "subset?(vars(t, s), vars(P))")
                                                                                                    (("1"
                                                                                                      (hide-all-but
                                                                                                       (-1
                                                                                                        -2
                                                                                                        -3
                                                                                                        4))
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "subset?")
                                                                                                        (("1"
                                                                                                          (inst?)
                                                                                                          (("1"
                                                                                                            (inst?)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (hide-all-but
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         ("t"
                                                                                                          "s"))
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "up")
                                                                                                          (("2"
                                                                                                            (use
                                                                                                             "choose_ac_vars2")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (case
                                                                                                 "member(x, vars(rhs(Pc)))")
                                                                                                (("1"
                                                                                                  (hide
                                                                                                   1)
                                                                                                  (("1"
                                                                                                    (use
                                                                                                     "solve_ac_rhs_not_protected")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (prop)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "disjoint?")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "empty?")
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -1
                                                                                                               "x")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 ("member"
                                                                                                                  "intersection")
                                                                                                                 1)
                                                                                                                (("1"
                                                                                                                  (use
                                                                                                                   "inst_step_match_dom")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (prop)
                                                                                                                        (("1"
                                                                                                                          (replace
                                                                                                                           -7
                                                                                                                           :dir
                                                                                                                           rl)
                                                                                                                          (("1"
                                                                                                                            (reveal
                                                                                                                             -5)
                                                                                                                            (("1"
                                                                                                                              (prop)
                                                                                                                              (("1"
                                                                                                                                (rewrite
                                                                                                                                 "vars_unif_prb")
                                                                                                                                (("1"
                                                                                                                                  (skolem
                                                                                                                                   -1
                                                                                                                                   "t1")
                                                                                                                                  (("1"
                                                                                                                                    (prop)
                                                                                                                                    (("1"
                                                                                                                                      (use
                                                                                                                                       "inst_step2_mem")
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (replace
                                                                                                                                           -9
                                                                                                                                           :dir
                                                                                                                                           rl)
                                                                                                                                          (("1"
                                                                                                                                            (replace
                                                                                                                                             -10
                                                                                                                                             :dir
                                                                                                                                             rl)
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (skolem
                                                                                                                                                 -1
                                                                                                                                                 "t1p")
                                                                                                                                                (("1"
                                                                                                                                                  (flatten)
                                                                                                                                                  (("1"
                                                                                                                                                    (replace
                                                                                                                                                     -2)
                                                                                                                                                    (("1"
                                                                                                                                                      (use
                                                                                                                                                       "apply_sub_elim_var_t")
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        (("1"
                                                                                                                                                          (use
                                                                                                                                                           "inst_step_idempotent3")
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            (("1"
                                                                                                                                                              (replace
                                                                                                                                                               -13
                                                                                                                                                               :dir
                                                                                                                                                               rl)
                                                                                                                                                              (("1"
                                                                                                                                                                (use
                                                                                                                                                                 "idempotent_disjoint_dom_img")
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (hide-all-but
                                                                                                                                                                     (-1
                                                                                                                                                                      -3
                                                                                                                                                                      -8))
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "disjoint?")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (grind)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (use
                                                                                                                                 "inst_step_idempotent3")
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  (("2"
                                                                                                                                    (replace
                                                                                                                                     -9
                                                                                                                                     :dir
                                                                                                                                     rl)
                                                                                                                                    (("2"
                                                                                                                                      (use
                                                                                                                                       "idempotent_disjoint_dom_img")
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        (("2"
                                                                                                                                          (hide-all-but
                                                                                                                                           (-1
                                                                                                                                            -3
                                                                                                                                            -4))
                                                                                                                                          (("2"
                                                                                                                                            (expand
                                                                                                                                             "disjoint?")
                                                                                                                                            (("2"
                                                                                                                                              (grind)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (use
                                                                                                                           "solve_ac_match_condition")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (prop)
                                                                                                                              (("1"
                                                                                                                                (hide-all-but
                                                                                                                                 (1
                                                                                                                                  6))
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "PV"
                                                                                                                                   1)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "s"
                                                                                                                                     1)
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "up"
                                                                                                                                       1)
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "P")
                                                                                                                                        (("1"
                                                                                                                                          (typepred
                                                                                                                                           "input")
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "nice_input?")
                                                                                                                                            (("1"
                                                                                                                                              (flatten)
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "match_problem?"
                                                                                                                                                 -9)
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "subset?"
                                                                                                                                                   1)
                                                                                                                                                  (("1"
                                                                                                                                                    (skolem
                                                                                                                                                     1
                                                                                                                                                     "X")
                                                                                                                                                    (("1"
                                                                                                                                                      (inst?)
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        (("1"
                                                                                                                                                          (flatten)
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            (("1"
                                                                                                                                                              (rewrite
                                                                                                                                                               "vars_args"
                                                                                                                                                               1)
                                                                                                                                                              (("1"
                                                                                                                                                                (inst
                                                                                                                                                                 1
                                                                                                                                                                 "choose_ac(input`2)`2`2")
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (reveal
                                                                                                                                                                     -8)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "P"
                                                                                                                                                                       -1)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (use
                                                                                                                                                                         "choose_ac_rhs")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (hide-all-but
                                                                                                                                 1)
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "subset?"
                                                                                                                                   1)
                                                                                                                                  (("2"
                                                                                                                                    (skolem
                                                                                                                                     1
                                                                                                                                     "y")
                                                                                                                                    (("2"
                                                                                                                                      (prop)
                                                                                                                                      (("2"
                                                                                                                                        (rewrite
                                                                                                                                         "mem_list2set"
                                                                                                                                         :dir
                                                                                                                                         rl)
                                                                                                                                        (("2"
                                                                                                                                          (rewrite
                                                                                                                                           "finset2list_mem")
                                                                                                                                          (("2"
                                                                                                                                            (expand
                                                                                                                                             "V"
                                                                                                                                             1)
                                                                                                                                            (("2"
                                                                                                                                              (case
                                                                                                                                               "subset?(vars(t, s), vars(P))")
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "subset?")
                                                                                                                                                (("1"
                                                                                                                                                  (inst?)
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "P")
                                                                                                                                                      (("1"
                                                                                                                                                        (typepred
                                                                                                                                                         "input")
                                                                                                                                                        (("1"
                                                                                                                                                          (expand
                                                                                                                                                           "nice_input?")
                                                                                                                                                          (("1"
                                                                                                                                                            (flatten)
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "subset?"
                                                                                                                                                               -4)
                                                                                                                                                              (("1"
                                                                                                                                                                (inst?)
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (expand
                                                                                                                                                 ("t"
                                                                                                                                                  "s")
                                                                                                                                                 1)
                                                                                                                                                (("2"
                                                                                                                                                  (expand
                                                                                                                                                   "up")
                                                                                                                                                  (("2"
                                                                                                                                                    (use
                                                                                                                                                     "choose_ac_vars2")
                                                                                                                                                    (("2"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (hide-all-but
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             ("PV"
                                                                                                              "V"))
                                                                                                            (("2"
                                                                                                              (typepred
                                                                                                               "input")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "nice_input?")
                                                                                                                (("2"
                                                                                                                  (flatten)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (rewrite
                                                                                                   "vars_unif_prb"
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (skolem
                                                                                                     -1
                                                                                                     "t1")
                                                                                                    (("2"
                                                                                                      (flatten)
                                                                                                      (("2"
                                                                                                        (rewrite
                                                                                                         "member_lhs_rhs")
                                                                                                        (("2"
                                                                                                          (rewrite
                                                                                                           "vars_args"
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (rewrite
                                                                                                             "vars_args"
                                                                                                             2)
                                                                                                            (("2"
                                                                                                              (prop)
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 2
                                                                                                                 "t1")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (inst
                                                                                                                 1
                                                                                                                 "t1")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (prop)
                                                                                            (("1"
                                                                                              (use
                                                                                               "inst_step_vars_unif2")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -5
                                                                                                   :dir
                                                                                                   rl)
                                                                                                  (("1"
                                                                                                    (hide-all-but
                                                                                                     (-1
                                                                                                      -2
                                                                                                      1))
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "subset?")
                                                                                                      (("1"
                                                                                                        (grind)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (use
                                                                                               "inst_step_vars_img")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (replace
                                                                                                   -6
                                                                                                   :dir
                                                                                                   rl)
                                                                                                  (("2"
                                                                                                    (hide-all-but
                                                                                                     (-1
                                                                                                      -2
                                                                                                      1))
                                                                                                    (("2"
                                                                                                      (grind)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (flatten)
                                                                                  (("2"
                                                                                    (prop)
                                                                                    (("2"
                                                                                      (use
                                                                                       "apply_sub_vars")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "subset?")
                                                                                        (("2"
                                                                                          (inst?)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (expand
                                                                                               ("member"
                                                                                                "union")
                                                                                               -1)
                                                                                              (("2"
                                                                                                (propax)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (hide-all-but (-1 1))
                                          (("2"
                                            (expand "t" 1)
                                            (("2"
                                              (expand "up" 1)
                                              (("2"
                                                (use "exists_ac_is_ac")
                                                (("2"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (hide-all-but (-1 1))
                                        (("2"
                                          (expand "t")
                                          (("2"
                                            (expand "up" 1)
                                            (("2"
                                              (use "exists_ac_is_ac")
                                              (("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((atom type-eq-decl nil atoms nil)
    (variable type-eq-decl nil term_properties nil)
    (fresh_context type-eq-decl nil freshness nil)
    (perm type-eq-decl nil atoms nil)
    (f_symbol type-eq-decl nil term_properties nil)
    (ac_symbol type-eq-decl nil term_properties nil)
    (term type-decl nil term_adt nil)
    (unif_pair type-eq-decl nil unification nil)
    (unif_prb type-eq-decl nil unification nil)
    (basic_sub type-eq-decl nil substitution nil)
    (sub type-eq-decl nil substitution nil)
    (finset2list def-decl "list[T]" list_theory nil)
    (sec_proj def-decl "list[T2]" list_theory2 nil)
    (inst_step_mem formula-decl nil inst_step nil)
    (img const-decl
     "finite_set[term[atom, perm, variable, f_symbol, ac_symbol]]"
     substitution nil)
    (inst_step_vars_unif2 formula-decl nil inst_step nil)
    (inst_step_vars_img formula-decl nil inst_step nil)
    (rhs const-decl "args" unification nil)
    (solve_ac_rhs_not_protected formula-decl nil aux_unification nil)
    (vars_unif_prb formula-decl nil unification nil)
    (idempotent_disjoint_dom_img formula-decl nil substitution nil)
    (subs const-decl "term" substitution nil)
    (dom const-decl "finite_set[variable]" substitution nil)
    (inst_step_idempotent3 formula-decl nil inst_step nil)
    (apply_sub_elim_var_t formula-decl nil substitution nil)
    (inst_step2_mem formula-decl nil inst_step nil)
    (mem_list2set formula-decl nil list_theory nil)
    (finset2list_mem formula-decl nil list_theory nil)
    (match_problem? const-decl "bool" unification nil)
    (vars_args formula-decl nil term_properties nil)
    (solve_ac_match_condition formula-decl nil aux_unification nil)
    (inst_step_match_dom formula-decl nil inst_step nil)
    (member_lhs_rhs formula-decl nil unification nil)
    (solve_ac_vars_lhs formula-decl nil aux_unification nil)
    (vars const-decl "finite_set[variable]" unification nil)
    (lhs const-decl "args" unification nil)
    (args type-eq-decl nil term_properties nil)
    (apply_sub_vars formula-decl nil unification nil)
    (vars_unif_prb_append formula-decl nil unification nil)
    (apply_sub def-decl "unif_prb" unification nil)
    (inst_step def-decl "list[[fresh_context, unif_prb, sub]]"
     inst_step nil)
    (first_proj def-decl "list[T1]" list_theory2 nil)
    (ac_sol type-eq-decl nil aux_unification nil)
    (solve_ac const-decl "list[ac_sol]" aux_unification nil)
    (ac_app? adt-recognizer-decl "[term -> boolean]" term_adt nil)
    (ac_sym adt-accessor-decl "[(ac_app?) -> ac_symbol]" term_adt nil))
   shostak))
 (apply_ac_max_size_le_TCC1 0
  (apply_ac_max_size_le_TCC1-1 nil 3884447178
   ("" (subtype-tcc) nil nil) nil nil
   (apply_ac_max_size_le subtype "ac_step.t"
    "(term_adt[atom, atoms.perm, variable, f_symbol, ac_symbol].ac_app?)")))
 (apply_ac_max_size_le 0
  (apply_ac_max_size_le-1 nil 3884447402
   ("" (skeep)
    (("" (assert)
      (("" (name-replace "G" "input`1")
        (("" (name-replace "P" "input`2")
          (("" (name-replace "sig" "input`3")
            (("" (name-replace "V" "input`4")
              (("" (name-replace "PV" "input`5")
                (("" (name-replace "up" "choose_ac(P)`2")
                  (("" (name-replace "P_r" "choose_ac(P)`3")
                    (("" (name-replace "t" "up`1")
                      (("" (name-replace "s" "up`2")
                        ((""
                          (name-replace "lst_V"
                           "finset2list[variable](V)")
                          ((""
                            (name-replace "ac_results"
                             "first_proj(solve_ac(G, s, t, lst_V, ac_sym(t), PV))")
                            ((""
                              (name-replace "new_V"
                               "vars(sec_proj(solve_ac(G, s, t, lst_V, ac_sym(t), PV)))")
                              (("1"
                                (name-replace
                                 "ac_results_subs"
                                 "inst_step(PV, G, ac_results)")
                                (("1"
                                  (hide -1 -2)
                                  (("1"
                                    (flatten)
                                    (("1"
                                      (expand "ac_results_subs" -2)
                                      (("1"
                                        (use "inst_step_mem")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (skolem -1 "Pc")
                                            (("1"
                                              (flatten)
                                              (("1"
                                                (hide -6)
                                                (("1"
                                                  (expand
                                                   "ac_results"
                                                   -1)
                                                  (("1"
                                                    (use
                                                     "max_size_unif_pair")
                                                    (("1"
                                                      (split -1)
                                                      (("1"
                                                        (skolem
                                                         -1
                                                         "upI")
                                                        (("1"
                                                          (flatten)
                                                          (("1"
                                                            (replace
                                                             -2
                                                             3
                                                             :dir
                                                             rl)
                                                            (("1"
                                                              (hide -2)
                                                              (("1"
                                                                (lemma
                                                                 "inst_step_skip_ind_mem")
                                                                (("1"
                                                                  (inst
                                                                   -1
                                                                   "G"
                                                                   "Pc"
                                                                   "PV"
                                                                   "upI")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (skeep)
                                                                        (("1"
                                                                          (replace
                                                                           -8
                                                                           :dir
                                                                           rl)
                                                                          (("1"
                                                                            (expand
                                                                             "apply_sub"
                                                                             -2)
                                                                            (("1"
                                                                              (name-replace
                                                                               "u"
                                                                               "nth(Pc, i)`1")
                                                                              (("1"
                                                                                (name-replace
                                                                                 "v"
                                                                                 "nth(Pc, i)`2")
                                                                                (("1"
                                                                                  (case
                                                                                   "disjoint?(dom(sigma1), vars(lhs(Pc)))")
                                                                                  (("1"
                                                                                    (replace
                                                                                     -3
                                                                                     3)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "size"
                                                                                       3
                                                                                       1)
                                                                                      (("1"
                                                                                        (lemma
                                                                                         "subs_no_effect_t")
                                                                                        (("1"
                                                                                          (inst
                                                                                           -1
                                                                                           "sigma1"
                                                                                           "u")
                                                                                          (("1"
                                                                                            (prop)
                                                                                            (("1"
                                                                                              (replace
                                                                                               -1)
                                                                                              (("1"
                                                                                                (case
                                                                                                 "var?(v) AND p(v) = null")
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "NOT member(V(v), PV)")
                                                                                                    (("1"
                                                                                                      (lemma
                                                                                                       "inst_step_match_skip_ind")
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -1
                                                                                                         "G"
                                                                                                         "Pc"
                                                                                                         "PV"
                                                                                                         "V(v)")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -13
                                                                                                             :dir
                                                                                                             rl)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (prop)
                                                                                                                (("1"
                                                                                                                  (skolem
                                                                                                                   -1
                                                                                                                   "j")
                                                                                                                  (("1"
                                                                                                                    (flatten)
                                                                                                                    (("1"
                                                                                                                      (hide
                                                                                                                       -10
                                                                                                                       1
                                                                                                                       2
                                                                                                                       4)
                                                                                                                      (("1"
                                                                                                                        (lemma
                                                                                                                         "term_times_eta")
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           -1
                                                                                                                           "v")
                                                                                                                          (("1"
                                                                                                                            (replace
                                                                                                                             -6)
                                                                                                                            (("1"
                                                                                                                              (hide
                                                                                                                               -5
                                                                                                                               -6)
                                                                                                                              (("1"
                                                                                                                                (replace
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "subs"
                                                                                                                                   -4
                                                                                                                                   1)
                                                                                                                                  (("1"
                                                                                                                                    (replace
                                                                                                                                     -1)
                                                                                                                                    (("1"
                                                                                                                                      (name-replace
                                                                                                                                       "uj"
                                                                                                                                       "nth(Pc, j)`1")
                                                                                                                                      (("1"
                                                                                                                                        (replace
                                                                                                                                         -4)
                                                                                                                                        (("1"
                                                                                                                                          (case
                                                                                                                                           "NOT i = j")
                                                                                                                                          (("1"
                                                                                                                                            (case
                                                                                                                                             "subs(sigma1)(uj) = uj")
                                                                                                                                            (("1"
                                                                                                                                              (replace
                                                                                                                                               -1)
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "uj"
                                                                                                                                                 3)
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "u"
                                                                                                                                                   3)
                                                                                                                                                  (("1"
                                                                                                                                                    (use
                                                                                                                                                     "size_lhs_nth")
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      (("1"
                                                                                                                                                        (case
                                                                                                                                                         "size(lhs(Pc)) < size(s) + size(t)")
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (hide
                                                                                                                                                           4
                                                                                                                                                           -1)
                                                                                                                                                          (("2"
                                                                                                                                                            (use
                                                                                                                                                             "solve_ac_lhs_elim_com_arg")
                                                                                                                                                            (("2"
                                                                                                                                                              (assert)
                                                                                                                                                              (("2"
                                                                                                                                                                (replace
                                                                                                                                                                 -1
                                                                                                                                                                 1)
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "elim_com_arg"
                                                                                                                                                                   1)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (rewrite
                                                                                                                                                                     "size_args_append")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (name-replace
                                                                                                                                                                       "f"
                                                                                                                                                                       "ac_sym(t)")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (name-replace
                                                                                                                                                                         "args_t"
                                                                                                                                                                         "get_args(f)(t)")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (name-replace
                                                                                                                                                                           "args_s"
                                                                                                                                                                           "get_args(f)(s)")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (name-replace
                                                                                                                                                                             "args_s1"
                                                                                                                                                                             "remove_common(args_s, args_t, equal?(G))")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (name-replace
                                                                                                                                                                               "args_t1"
                                                                                                                                                                               "remove_common(args_t, args_s, equal?(G))")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (use
                                                                                                                                                                                 "count_elem_size_cor")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (lemma
                                                                                                                                                                                   "count_elem_size_cor")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (inst
                                                                                                                                                                                     -1
                                                                                                                                                                                     "G"
                                                                                                                                                                                     "args_t1")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (case
                                                                                                                                                                                       "size(args_s1) + size(args_t1) < size(s) + size(t)")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (hide-all-but
                                                                                                                                                                                         (-1
                                                                                                                                                                                          -2
                                                                                                                                                                                          -3
                                                                                                                                                                                          1))
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil)
                                                                                                                                                                                       ("2"
                                                                                                                                                                                        (hide
                                                                                                                                                                                         -1
                                                                                                                                                                                         -2
                                                                                                                                                                                         2)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           ("args_s1"
                                                                                                                                                                                            "args_t1"))
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (use
                                                                                                                                                                                             "remove_common_size")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (lemma
                                                                                                                                                                                               "remove_common_size")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (inst
                                                                                                                                                                                                 -1
                                                                                                                                                                                                 "G"
                                                                                                                                                                                                 "args_t "
                                                                                                                                                                                                 "args_s")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (case
                                                                                                                                                                                                   "size(args_s) + size(args_t) < size(s) + size(t)")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (hide-all-but
                                                                                                                                                                                                     (-1
                                                                                                                                                                                                      -2
                                                                                                                                                                                                      -3
                                                                                                                                                                                                      1))
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      nil
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil)
                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                    (hide
                                                                                                                                                                                                     -1
                                                                                                                                                                                                     -2
                                                                                                                                                                                                     2)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (expand
                                                                                                                                                                                                       "args_s"
                                                                                                                                                                                                       1)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "args_t"
                                                                                                                                                                                                         1)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (lemma
                                                                                                                                                                                                           "get_args_size3")
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (inst
                                                                                                                                                                                                             -1
                                                                                                                                                                                                             "f"
                                                                                                                                                                                                             "t")
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (prop)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (lemma
                                                                                                                                                                                                                 "get_args_size2")
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (inst
                                                                                                                                                                                                                   -1
                                                                                                                                                                                                                   "f"
                                                                                                                                                                                                                   "s")
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (hide-all-but
                                                                                                                                                                                                                     (-1
                                                                                                                                                                                                                      -2
                                                                                                                                                                                                                      1))
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil)
                                                                                                                                                                                                               ("2"
                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                 "is_ac_sym?"
                                                                                                                                                                                                                 1)
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                   "f"
                                                                                                                                                                                                                   1)
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                      (hide-all-but
                                                                                                                                                                                                                       (-16
                                                                                                                                                                                                                        1))
                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                        (expand
                                                                                                                                                                                                                         "t")
                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                          (expand
                                                                                                                                                                                                                           "up")
                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                            (use
                                                                                                                                                                                                                             "exists_ac_is_ac")
                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                                              nil
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (use
                                                                                                                                               "subs_no_effect_t")
                                                                                                                                              (("2"
                                                                                                                                                (assert)
                                                                                                                                                (("2"
                                                                                                                                                  (expand
                                                                                                                                                   "disjoint?")
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "empty?")
                                                                                                                                                    (("2"
                                                                                                                                                      (skeep)
                                                                                                                                                      (("2"
                                                                                                                                                        (inst
                                                                                                                                                         -7
                                                                                                                                                         "x")
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           ("member"
                                                                                                                                                            "intersection")
                                                                                                                                                           -1)
                                                                                                                                                          (("2"
                                                                                                                                                            (expand
                                                                                                                                                             ("member"
                                                                                                                                                              "intersection")
                                                                                                                                                             3)
                                                                                                                                                            (("2"
                                                                                                                                                              (flatten)
                                                                                                                                                              (("2"
                                                                                                                                                                (assert)
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "uj"
                                                                                                                                                                   -2)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (rewrite
                                                                                                                                                                     "vars_args"
                                                                                                                                                                     3)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (inst
                                                                                                                                                                       3
                                                                                                                                                                       "nth(Pc, j)`1")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (expand
                                                                                                                                                                           "lhs"
                                                                                                                                                                           3)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (rewrite
                                                                                                                                                                             "first_proj_mem")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (inst
                                                                                                                                                                               3
                                                                                                                                                                               "nth(Pc, j)")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (rewrite
                                                                                                                                                                                 "member_nth")
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (reveal
                                                                                                                                             -5
                                                                                                                                             1)
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (rewrite
                                                                                                                   "vars_args")
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     1
                                                                                                                     "v")
                                                                                                                    (("2"
                                                                                                                      (prop)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "rhs"
                                                                                                                         1)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "v"
                                                                                                                           1)
                                                                                                                          (("1"
                                                                                                                            (rewrite
                                                                                                                             "sec_proj_mem")
                                                                                                                            (("1"
                                                                                                                              (inst
                                                                                                                               1
                                                                                                                               "nth(Pc, i)")
                                                                                                                              (("1"
                                                                                                                                (rewrite
                                                                                                                                 "member_nth")
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (expand
                                                                                                                         "vars"
                                                                                                                         1)
                                                                                                                        (("2"
                                                                                                                          (hide-all-but
                                                                                                                           1)
                                                                                                                          (("2"
                                                                                                                            (grind)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("3"
                                                                                                                  (expand
                                                                                                                   "lst_V"
                                                                                                                   -9)
                                                                                                                  (("3"
                                                                                                                    (use
                                                                                                                     "solve_ac_match_condition")
                                                                                                                    (("3"
                                                                                                                      (assert)
                                                                                                                      (("3"
                                                                                                                        (prop)
                                                                                                                        (("1"
                                                                                                                          (hide-all-but
                                                                                                                           (-13
                                                                                                                            1))
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "s"
                                                                                                                             1)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "up"
                                                                                                                               1)
                                                                                                                              (("1"
                                                                                                                                (use
                                                                                                                                 "choose_ac_match_problem_subset")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     ("P"
                                                                                                                                      "PV"))
                                                                                                                                    (("1"
                                                                                                                                      (typepred
                                                                                                                                       "input")
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "nice_input?"
                                                                                                                                         -1)
                                                                                                                                        (("1"
                                                                                                                                          (flatten)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (expand
                                                                                                                           "subset?"
                                                                                                                           1)
                                                                                                                          (("2"
                                                                                                                            (skeep)
                                                                                                                            (("2"
                                                                                                                              (rewrite
                                                                                                                               "mem_list2set"
                                                                                                                               :dir
                                                                                                                               rl)
                                                                                                                              (("2"
                                                                                                                                (rewrite
                                                                                                                                 "finset2list_mem")
                                                                                                                                (("2"
                                                                                                                                  (hide-all-but
                                                                                                                                   (-1
                                                                                                                                    1))
                                                                                                                                  (("2"
                                                                                                                                    (case
                                                                                                                                     "subset?(vars(P), V)")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "subset?"
                                                                                                                                       -1)
                                                                                                                                      (("1"
                                                                                                                                        (inst?)
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             ("t"
                                                                                                                                              "s"))
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "up")
                                                                                                                                              (("1"
                                                                                                                                                (use
                                                                                                                                                 "choose_ac_vars2")
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "subset?"
                                                                                                                                                   -1)
                                                                                                                                                  (("1"
                                                                                                                                                    (inst
                                                                                                                                                     -1
                                                                                                                                                     "x")
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (expand
                                                                                                                                       ("P"
                                                                                                                                        "V"))
                                                                                                                                      (("2"
                                                                                                                                        (typepred
                                                                                                                                         "input")
                                                                                                                                        (("2"
                                                                                                                                          (expand
                                                                                                                                           "nice_input?")
                                                                                                                                          (("2"
                                                                                                                                            (flatten)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (expand
                                                                                                       "lst_V"
                                                                                                       -10)
                                                                                                      (("2"
                                                                                                        (lemma
                                                                                                         "solve_ac_rhs_not_protected")
                                                                                                        (("2"
                                                                                                          (inst?)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (prop)
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "disjoint?"
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "empty?"
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     -1
                                                                                                                     "V(v)")
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       ("member"
                                                                                                                        "intersection")
                                                                                                                       1)
                                                                                                                      (("1"
                                                                                                                        (rewrite
                                                                                                                         "vars_args"
                                                                                                                         1)
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           1
                                                                                                                           "v")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "vars"
                                                                                                                             1)
                                                                                                                            (("1"
                                                                                                                              (prop)
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "rhs"
                                                                                                                                 1)
                                                                                                                                (("1"
                                                                                                                                  (rewrite
                                                                                                                                   "sec_proj_mem"
                                                                                                                                   1)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "v"
                                                                                                                                     1)
                                                                                                                                    (("1"
                                                                                                                                      (inst
                                                                                                                                       1
                                                                                                                                       "nth(Pc, i)")
                                                                                                                                      (("1"
                                                                                                                                        (rewrite
                                                                                                                                         "member_nth")
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (hide-all-but
                                                                                                                                 1)
                                                                                                                                (("2"
                                                                                                                                  (grind)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (hide-all-but
                                                                                                                 1)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   ("PV"
                                                                                                                    "V"))
                                                                                                                  (("2"
                                                                                                                    (typepred
                                                                                                                     "input")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "nice_input?")
                                                                                                                      (("2"
                                                                                                                        (flatten)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (case
                                                                                                   "var?(v)")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (lemma
                                                                                                       "solve_ac_var_rhs_perm_null")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (inst?)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "lst_V"
                                                                                                             -9)
                                                                                                            (("1"
                                                                                                              (inst?)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (hide-all-but
                                                                                                                   (-4
                                                                                                                    1))
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "rhs"
                                                                                                                     1)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "v"
                                                                                                                       1)
                                                                                                                      (("1"
                                                                                                                        (rewrite
                                                                                                                         "sec_proj_mem")
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           1
                                                                                                                           "nth(Pc, i)")
                                                                                                                          (("1"
                                                                                                                            (rewrite
                                                                                                                             "member_nth")
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (hide
                                                                                                     2)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "lst_V"
                                                                                                       -7)
                                                                                                      (("2"
                                                                                                        (use
                                                                                                         "solve_ac_vars_unptc")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (split
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (flatten)
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "v"
                                                                                                                 1)
                                                                                                                (("1"
                                                                                                                  (propax)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (reveal
                                                                                                               -4
                                                                                                               -5)
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -2)
                                                                                                                (("2"
                                                                                                                  (lemma
                                                                                                                   "inst_step_inst_left_dom")
                                                                                                                  (("2"
                                                                                                                    (inst?)
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       -1
                                                                                                                       "v"
                                                                                                                       "u")
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (replace
                                                                                                                           -14
                                                                                                                           :dir
                                                                                                                           rl)
                                                                                                                          (("2"
                                                                                                                            (prop)
                                                                                                                            (("1"
                                                                                                                              (hide
                                                                                                                               -11
                                                                                                                               -12
                                                                                                                               -13)
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "disjoint?"
                                                                                                                                 -6)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "empty?"
                                                                                                                                   -6)
                                                                                                                                  (("1"
                                                                                                                                    (inst?)
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       ("member"
                                                                                                                                        "intersection")
                                                                                                                                       2)
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (rewrite
                                                                                                                                           "vars_args"
                                                                                                                                           2)
                                                                                                                                          (("1"
                                                                                                                                            (inst
                                                                                                                                             2
                                                                                                                                             "u")
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "unptc_var?"
                                                                                                                                               -4)
                                                                                                                                              (("1"
                                                                                                                                                (flatten)
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "vars"
                                                                                                                                                   3)
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    (("1"
                                                                                                                                                      (prop)
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "lhs"
                                                                                                                                                         1)
                                                                                                                                                        (("1"
                                                                                                                                                          (rewrite
                                                                                                                                                           "first_proj_mem")
                                                                                                                                                          (("1"
                                                                                                                                                            (inst
                                                                                                                                                             1
                                                                                                                                                             "nth(Pc, i)")
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              (("1"
                                                                                                                                                                (rewrite
                                                                                                                                                                 "member_nth"
                                                                                                                                                                 1)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (hide-all-but
                                                                                                                                                         1)
                                                                                                                                                        (("2"
                                                                                                                                                          (grind)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (case
                                                                                                                               "nth(Pc, i) = (u, v)")
                                                                                                                              (("1"
                                                                                                                                (replace
                                                                                                                                 -1
                                                                                                                                 :dir
                                                                                                                                 rl)
                                                                                                                                (("1"
                                                                                                                                  (rewrite
                                                                                                                                   "member_nth")
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("3"
                                                                                                                              (expand
                                                                                                                               "unptc_var?"
                                                                                                                               -3)
                                                                                                                              (("3"
                                                                                                                                (flatten)
                                                                                                                                (("3"
                                                                                                                                  (expand
                                                                                                                                   "inst_left?"
                                                                                                                                   1)
                                                                                                                                  (("3"
                                                                                                                                    (propax)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (hide-all-but
                                                                                               (-1
                                                                                                1
                                                                                                -2))
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "disjoint?")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "empty?")
                                                                                                  (("2"
                                                                                                    (skeep)
                                                                                                    (("2"
                                                                                                      (inst?)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         ("member"
                                                                                                          "intersection"))
                                                                                                        (("2"
                                                                                                          (prop)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "u"
                                                                                                             -2)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "lhs"
                                                                                                               1)
                                                                                                              (("2"
                                                                                                                (rewrite
                                                                                                                 "vars_args"
                                                                                                                 1)
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   1
                                                                                                                   "nth(Pc, i)`1")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (rewrite
                                                                                                                       "first_proj_mem")
                                                                                                                      (("2"
                                                                                                                        (inst
                                                                                                                         1
                                                                                                                         "nth(Pc, i)")
                                                                                                                        (("2"
                                                                                                                          (rewrite
                                                                                                                           "member_nth")
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide
                                                                                     3
                                                                                     4
                                                                                     -1
                                                                                     -2
                                                                                     -3
                                                                                     -4)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "disjoint?")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "empty?")
                                                                                        (("2"
                                                                                          (skeep)
                                                                                          (("2"
                                                                                            (expand
                                                                                             ("member"
                                                                                              "intersection")
                                                                                             -1)
                                                                                            (("2"
                                                                                              (prop)
                                                                                              (("2"
                                                                                                (case
                                                                                                 "subset?(vars(lhs(Pc)), vars(P))")
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -9
                                                                                                   -1
                                                                                                   :dir
                                                                                                   rl)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "subset?")
                                                                                                    (("1"
                                                                                                      (inst?)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (rewrite
                                                                                                           "vars_unif_prb_append")
                                                                                                          (("1"
                                                                                                            (prop)
                                                                                                            (("1"
                                                                                                              (use
                                                                                                               "inst_step_vars_unif")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -7
                                                                                                                   :dir
                                                                                                                   rl)
                                                                                                                  (("1"
                                                                                                                    (replace
                                                                                                                     -8
                                                                                                                     :dir
                                                                                                                     rl)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "disjoint?"
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "empty?"
                                                                                                                         -1)
                                                                                                                        (("1"
                                                                                                                          (inst?)
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             ("member"
                                                                                                                              "intersection")
                                                                                                                             1)
                                                                                                                            (("1"
                                                                                                                              (propax)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (use
                                                                                                               "apply_sub_elim_var2")
                                                                                                              (("2"
                                                                                                                (prop)
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "disjoint?"
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "empty?"
                                                                                                                     -1)
                                                                                                                    (("1"
                                                                                                                      (inst?)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         ("member"
                                                                                                                          "intersection")
                                                                                                                         1)
                                                                                                                        (("1"
                                                                                                                          (propax)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (use
                                                                                                                   "inst_step_idempotent3")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (expand
                                                                                                   "lst_V"
                                                                                                   -3)
                                                                                                  (("2"
                                                                                                    (use
                                                                                                     "solve_ac_vars_lhs")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (hide-all-but
                                                                                                         (-1
                                                                                                          -8
                                                                                                          1))
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "subset?")
                                                                                                          (("2"
                                                                                                            (skolem
                                                                                                             1
                                                                                                             "x1")
                                                                                                            (("2"
                                                                                                              (inst?)
                                                                                                              (("2"
                                                                                                                (prop)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   ("t"
                                                                                                                    "s"))
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "up")
                                                                                                                    (("2"
                                                                                                                      (use
                                                                                                                       "choose_ac_vars2")
                                                                                                                      (("2"
                                                                                                                        (grind)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (expand
                                                         "max_size"
                                                         3)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (use
                                                             "size_ge1")
                                                            (("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (flatten)
                                (("2"
                                  (expand "t" 1)
                                  (("2"
                                    (expand "up" 1)
                                    (("2"
                                      (use "exists_ac_is_ac")
                                      (("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil) (atom type-eq-decl nil atoms nil)
    (variable type-eq-decl nil term_properties nil)
    (list type-decl nil list_adt nil)
    (fresh_context type-eq-decl nil freshness nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (perm type-eq-decl nil atoms nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (character type-decl nil character_adt nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (char type-eq-decl nil strings nil)
    (f_symbol type-eq-decl nil term_properties nil)
    (ac_symbol type-eq-decl nil term_properties nil)
    (term type-decl nil term_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (unif_pair type-eq-decl nil unification nil)
    (unif_prb type-eq-decl nil unification nil)
    (basic_sub type-eq-decl nil substitution nil)
    (sub type-eq-decl nil substitution nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (nice_input? const-decl "bool" ac_step nil)
    (nice_input type-eq-decl nil ac_step nil)
    (ac_sym adt-accessor-decl "[(ac_app?) -> ac_symbol]" term_adt nil)
    (ac_app? adt-recognizer-decl "[term -> boolean]" term_adt nil)
    (solve_ac const-decl "list[ac_sol]" aux_unification nil)
    (ac_sol type-eq-decl nil aux_unification nil)
    (string type-eq-decl nil strings nil)
    (first_proj def-decl "list[T1]" list_theory2 nil)
    (inst_step def-decl "list[[fresh_context, unif_prb, sub]]"
     inst_step nil)
    (inst_step_mem formula-decl nil inst_step nil)
    (max_size_unif_pair formula-decl nil ac_step nil)
    (max_size def-decl "nat" ac_step nil)
    (size_ge1 formula-decl nil term_properties nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (inst_step_skip_ind_mem formula-decl nil inst_step nil)
    (apply_sub const-decl "unif_pair" unification nil)
    (inst_step_vars_unif formula-decl nil inst_step nil)
    (inst_step_idempotent3 formula-decl nil inst_step nil)
    (apply_sub_elim_var2 formula-decl nil unification nil)
    (vars_unif_prb_append formula-decl nil unification nil)
    (apply_sub def-decl "unif_prb" unification nil)
    (solve_ac_vars_lhs formula-decl nil aux_unification nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (vars const-decl "finite_set[variable]" unification nil)
    (union const-decl "set" sets nil)
    (ac_prb? const-decl "bool" unification nil)
    (exists_ac? const-decl "bool" unification nil)
    (subs_no_effect_t formula-decl nil substitution nil)
    (var? adt-recognizer-decl "[term -> boolean]" term_adt nil)
    (p adt-accessor-decl "[(var?) -> perm]" term_adt nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (null adt-constructor-decl "(null?)" list_adt nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (member const-decl "bool" sets nil)
    (V adt-accessor-decl "[(var?) -> variable]" term_adt nil)
    (term_times_eta formula-decl nil term_adt nil)
    (size_lhs_nth formula-decl nil unification nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (solve_ac_lhs_elim_com_arg formula-decl nil aux_unification nil)
    (remove_common def-decl "list[T]" list_theory nil)
    (count_elem def-decl "[list[T], list[nat]]" list_theory nil)
    (equiv type-eq-decl nil list_theory nil)
    (equivalence? const-decl "bool" relations nil)
    (size_args_append formula-decl nil term_properties nil)
    (count_elem_size_cor formula-decl nil equality nil)
    (remove_common_size formula-decl nil equality nil)
    (is_ac_sym? const-decl "bool" term_properties nil)
    (exists_ac_is_ac formula-decl nil ac_step nil)
    (get_args_size2 formula-decl nil term_properties nil)
    (get_args_size3 formula-decl nil term_properties nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (elim_com_arg const-decl "[args, list[nat], list[nat]]"
     aux_unification nil)
    (empty? const-decl "bool" sets nil)
    (vars_args formula-decl nil term_properties nil)
    (first_proj_mem formula-decl nil list_theory2 nil)
    (member_nth formula-decl nil list_theory nil)
    (intersection const-decl "set" sets nil)
    (finite_intersection1 application-judgement "finite_set"
     finite_sets nil)
    (subs const-decl "term" substitution nil)
    (singleton const-decl "(singleton?)" sets nil)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set" finite_sets nil)
    (sec_proj_mem formula-decl nil list_theory2 nil)
    (rhs const-decl "args" unification nil)
    (solve_ac_match_condition formula-decl nil aux_unification nil)
    (choose_ac_match_problem_subset formula-decl nil ac_step nil)
    (finset2list_mem formula-decl nil list_theory nil)
    (choose_ac_vars2 formula-decl nil ac_step nil)
    (mem_list2set formula-decl nil list_theory nil)
    (subset? const-decl "bool" sets nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (inst_step_match_skip_ind formula-decl nil inst_step nil)
    (solve_ac_rhs_not_protected formula-decl nil aux_unification nil)
    (solve_ac_vars_unptc formula-decl nil aux_unification nil)
    (unptc_var? const-decl "bool" term_properties nil)
    (inst_left? const-decl "bool" inst_step nil)
    (inst_step_inst_left_dom formula-decl nil inst_step nil)
    (solve_ac_var_rhs_perm_null formula-decl nil aux_unification nil)
    (size const-decl "nat" unification nil)
    (lhs const-decl "args" unification nil)
    (args type-eq-decl nil term_properties nil)
    (dom const-decl "finite_set[variable]" substitution nil)
    (disjoint? const-decl "bool" sets nil)
    (< const-decl "bool" reals nil)
    (length def-decl "nat" list_props nil)
    (nth def-decl "T" list_props nil)
    (sec_proj def-decl "list[T2]" list_theory2 nil)
    (finset2list def-decl "list[T]" list_theory nil)
    (choose_ac const-decl "[bool, unif_pair, unif_prb]" ac_step nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil))
   shostak)))

