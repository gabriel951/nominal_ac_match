# Lema atual 
melhorar 2 lemas, reprovar o que jÃ¡ fiz, 

renaming_equal_syn, shift_append_equal_syn, 

# name-replace
## unify
(name-replace "G" "inp`1") 
(name-replace "P" "inp`2") 
(name-replace "sig" "inp`3") 
(name-replace "V" "inp`4") 
(name-replace "PV" "inp`5") 
(name-replace "up" "choose_eq(P)`1")
(name-replace "P1" "choose_eq(P)`2")
(name-replace "t" "up`1") 
(name-replace "s" "up`2") 

(name-replace "sig_" "cons((V(t), ext(reverse(p(t)))(s)), null)")
(name-replace "G_" "fresh_subs?(sig_, G)`1")
(name-replace "b" "fresh_subs?(sig_, G)`2")
(name-replace "new_G" "append(G_, G)")
(name-replace "new_sig" "append(sig_, sig)")
(name-replace "new_P" "apply_sub(sig_, P1)")

(name-replace "G_" "fc(DS(p(t), p(s)), V(t))")
(name-replace "new_G" "append(G_, G)")

(name-replace "f" "f_sym(t)") 
(name-replace "dec_P" "decompose(arg(t), arg(s))`1")
(name-replace "new_P" "append(dec_P, P1)")

(name-replace "dec_P" "decompose(body(t), body(s))`1")
(name-replace "new_P" "append(dec_P, P1)")

(name-replace "b" "fresh?(abstr(t), body(s))`2")
(name-replace "G_" "fresh?(abstr(t), body(s))`1")
(name-replace "pi" "cons((abstr(t), abstr(s)), null)")
(name-replace "dec_P" "decompose(body(t), ext(pi)(body(s)))`1")
(name-replace "new_P" "append(dec_P, P1)")
(name-replace "new_G" "append(G_, G)") 

## solve_ac
(name-replace "args" "elim_com_arg(G, s, t, f)`1")
(name-replace "ms" "elim_com_arg(G, s, t, f)`2")
(name-replace "mt" "elim_com_arg(G, s, t, f)`3")
(name-replace "b" "calculate_upper_bound(ms, mt)")
(name-replace "D" "dio_solver(ms, mt, b)")
(name-replace "D_lst" "extract_submatrices(D, args, PV)")

## elim_com_arg
(name-replace "p_args_s" "remove_common(get_args(f)(s), get_args(f)(t), equal?(G))")
(name-replace "args_s" "count_elem(null, null, p_args_s, equal?(G))`1")
(name-replace "p_args_t" "remove_common(get_args(f)(t), get_args(f)(s), equal?(G))")
(name-replace "args_t" "count_elem(null, null, p_args_t, equal?(G))`1")

## get_pre_new_args
(name-replace "Z1" "get_new_var(lst_V)")
(name-replace "lst_args1" "add_new_arg(lst_args, car(D), null * Z1)")


## NEW apply_ac
(name-replace "G" "input`1")
(name-replace "P" "input`2")
(name-replace "sig" "input`3")
(name-replace "V" "input`4")
(name-replace "PV" "input`5") 
(name-replace "P1" "cdr(P)")
(name-replace "t" "car(P)`1") 
(name-replace "s" "car(P)`2") 
(name-replace "lst_V" "finset2list[variable](V)")
(name-replace "ac_results" "first_proj(solve_ac(G, s, t, lst_V, ac_sym(t), PV))")
(name-replace "new_V"  "vars(sec_proj(solve_ac(G, s, t, lst_V, ac_sym(t), PV)))")
(name-replace "ac_results_subs" "inst_step(PV, G, ac_results)")

# inst_step 
(name-replace "t" "car(P)`1") 
(name-replace "s" "car(P)`2") 
(name-replace "G1" "inst_step(PV, G, t, s)`1")
(name-replace "del" "inst_step(PV, G, t, s)`2")
(name-replace "skp" "inst_step(PV, G, t, s)`3")
(name-replace "fai" "inst_step(PV, G, t, s)`4")

## substitution.pvs
-> some lemmas that depend on "equal?(t, s) => equal?(sigma t, sigma s)" were not proved. 

## OLD apply_ac
(name-replace "G" "input`1")
(name-replace "Pu" "input1_`2")
(name-replace "Ps" "input1_`3")
(name-replace "sig" "input1_`4")
(name-replace "V" "input1_`5")
(name-replace "PV" "input1_`6")
(name-replace "t" "car(Pu)`1")
(name-replace "s" "car(Pu)`2")
(name-replace "lst_V" "finset2list[variable](V)")
(name-replace "ac_results"  "first_proj(solve_ac(G, s, t, lst_V, ac_sym(t), PV))")
(name-replace "new_V"  "vars(sec_proj(solve_ac(G, s, t, lst_V, ac_sym(t), PV)))")
(name-replace "ac_results_subs" "inst_step(PV, G, ac_results)")

(""
 (skeep)
 (expand "unifies?" -1)
 (lemma "ac_perm_args2")
 (inst -1 "f" "subs(del)(s)" "subs(del)(t)")
 (assert)
 (hide -2)
 (name-replace "A_t" "count_elem2(get_args(f)(t), equal?(G))`1")
 (("1"
   (name-replace "mt" "count_elem2(get_args(f)(t), equal?(G))`2")
   (name-replace "A_s" "count_elem2(get_args(f)(s), equal?(G))`1")
   (name-replace "ms" "count_elem2(get_args(f)(s), equal?(G))`2")
   (hide -1 -2 -3 -4)
   (name-replace "A_del_t"
    "count_elem2(get_args(f)(subs(del)(t)), equal?(Del))`1")
   (("1"
     (name-replace "m_del_t"
      "count_elem2(get_args(f)(subs(del)(t)), equal?(Del))`2")
     (name-replace "b" "calculate_upper_bound(mt, ms)")
     (("1"
       (hide 1)
       (hide -8 -9 -10 -11 -12)
       (name-replace "del_A" "subs(del)(append(A_t, A_s))")
       (lemma "dio_solver_coef_matrix")
       (inst -1 "map(count_vec(del_A, f))(A_del_t)" "mt" "ms")
       (assert)
       (replace -3)
       (name-replace "D" "dio_solver(mt, ms, B)")
       (case "FORALL row:
                                                                                                                                                                     member(row, map(count_vec(del_A, f))(A_del_t)) IMPLIES
                                                                                                                                                                      is_solution?(row, mt, ms)")
       (("1"
         (prop)
         (skolem -1 "C")
         (name-replace "m" "length(mt)")
         (name-replace "n" "length(ms)")
         (name-replace "l" "length(D)")
         (prop)
         (rewrite "map_length")
         (name-replace "k" "length(A_del_t)")
         (name-replace "D1" "construct_submatrix(D, C)`1")
         (name-replace "C1" "construct_submatrix(D, C)`2")
         (hide -5 -6)
         (name-replace "A" "append(A_t, A_s)")
         (name-replace "P1"
          "dio_matrix2ac_sol(A, vars2avoid, f)(D1)`1")
         (name-replace "V1"
          "dio_matrix2ac_sol(A, vars2avoid, f)(D1)`2")
         (case "const1?(D1, m+n)")
         (("1"
           (hide -10 -9 -11 -13 -14 -15 -7 -4 -5)
           (name-replace "lam1"
            "construct_sub(D1, C1, A_del_t, vars2avoid, f)")
           (case "unifies?(append(lam1, del), P1)")
           (("1"
             (reveal 1)
             (name-replace "V" "vars2avoid")
             (inst 1 "P1" "lam1" "V1")
             (assert)
             (prop)
             (("1"
               (expand "solve_ac" 1)
               (reveal -10)
               (lemma "elim_com_arg_no_common_arg")
               (inst -1 "f" "s" "t")
               (assert)
               (prop)
               (reveal -26 -27 -28 -29)
               (replace -1)
               (replace -2)
               (replace -3)
               (replace -4)
               (replace -5)
               (replace -6)
               (replace -7)
               (hide -1 -2 -3 -4 -5 -6 -7)
               (reveal -15)
               (replace -1)
               (rewrite "map_member4")
               (inst 1 "D1")
               (assert)
               (reveal -9 -22)
               (replace -1)
               (replace -2)
               (rewrite "extract_submatrices_mem" :dir rl)
               (assert)
               (prop)
               (("1"
                 (expand "D1" 1)
                 (use "construct_submatrix_get_sublists"))
                ("2"
                 (expand "nice_submatrix?" 1)
                 (case "length(A) = m + n")
                 (("1"
                   (replace -1)
                   (assert)
                   (prop)
                   (("1"
                     (expand "m" 1)
                     (case "n > 0")
                     (("1" (assert))
                      ("2"
                       (hide 2)
                       (expand "n" 1)
                       (expand "ms" 1)
                       (rewrite "count_elem2_cor")
                       (use "count_elem_len_gt0[term]")
                       (assert)
                       (use "count_elem_len[term]")
                       (assert)
                       (expand "length" -1 1)
                       (expand "length" -1 1)
                       (replace -1)
                       (assert)
                       (hide -1 2)
                       (rewrite "get_args_len")
                       (rewrite "num_arg_ge1"))))
                    ("2"
                     (expand "D1" 1)
                     (lemma "construct_submatrix_matrix2")
                     (inst -1 "C" "D" "m+n")
                     (assert)
                     (assert)
                     (expand "D" 1)
                     (use "dio_solver_matrix")
                     (expand "m" 1)
                     (expand "n" 1)
                     (assert))
                    ("3"
                     (use "if_non_var_const2_cor2")
                     (assert)
                     (hide 2)
                     (skolem 1 "j")
                     (flatten)
                     (name-replace "tj" "nth(A, j)")
                     (case "is_ac_sym?(tj, f)")
                     (("1"
                       (hide -10 -11 -12 -13 -14 -15 -8 -9)
                       (expand "is_ac_sym?" -1)
                       (flatten)
                       (case "member(tj, A)")
                       (("1"
                         (expand "A" -1)
                         (rewrite "member_append")
                         (prop)
                         (("1"
                           (expand "A_t" -1)
                           (use "count_elem2_mem[term]")
                           (assert)
                           (use "get_args_mem_not_ac")
                           (assert)
                           (expand "is_ac_sym?" 1)
                           (propax))
                          ("2"
                           (expand "A_s" -1)
                           (use "count_elem2_mem[term]")
                           (assert)
                           (hide -2)
                           (use "get_args_mem_not_ac")
                           (assert)
                           (expand "is_ac_sym?" 1)
                           (propax))))
                        ("2"
                         (expand "tj" 1)
                         (rewrite "member_nth2")
                         (inst 1 "j"))))
                      ("2"
                       (hide -8 -9 -12 -3 -4 -5-2-14 -13)
                       (use "const2_sum")
                       (assert)
                       (hide 4)
                       (lemma "dio_matrix2ac_is_var_sum")
                       (inst -1 "A" "D1" "f" "j" "V")
                       (assert)
                       (replace -3)
                       (split)
                       (("1"
                         (replace -7)
                         (name-replace "tj_" "nth(P1, j)`2")
                         (lemma "dio_matrix2ac_mem_rhs")
                         (inst?)
                         (inst -1 "tj_")
                         (assert)
                         (replace -8)
                         (assert)
                         (prop)
                         (("1"
                           (rewrite "unifies?_equiv")
                           (inst -6 "nth(P1, j)")
                           (("1"
                             (prop)
                             (("1"
                               (expand "unifies?" -1)
                               (reveal -4 -11)
                               (replace -1)
                               (use "dio_matrix2ac_mem_lhs_nth")
                               (assert)
                               (replace -11)
                               (replace -1)
                               (replace -3)
                               (name-replace
                                "sigma2"
                                "append(lam1, del)")
                               (lemma "equal?_sym")
                               (inst
                                -1
                                "subs(sigma2)(tj_)"
                                "subs(sigma2)(tj)")
                               (assert)
                               (hide -5)
                               (expand "is_ac_sym?" -5)
                               (flatten)
                               (lemma "term_ac_app_eta")
                               (inst -1 "tj_")
                               (replace -7 :dir rl)
                               (replace -1 -2 :dir rl)
                               (rewrite "subs_ac")
                               (expand "equal?" -2)
                               (flatten)
                               (hide -4)
                               (case "is_ac_sym?(subs(sigma2)(tj), f)")
                               (("1" (use "subs_ac3") (assert))
                                ("2"
                                 (expand "is_ac_sym?" 1)
                                 (assert))))
                              ("2"
                               (rewrite "member_nth")
                               (expand "P1" 1)
                               (use "dio_matrix2ac_len")
                               (assert))))
                            ("2"
                             (expand "P1" 1)
                             (use "dio_matrix2ac_len")
                             (assert))))
                          ("2"
                           (expand "tj_" 1)
                           (expand "rhs" 1)
                           (rewrite "sec_proj_mem" 1)
                           (inst 1 "nth(P1, j)")
                           (("1"
                             (rewrite "member_nth")
                             (expand "P1" 1)
                             (use "dio_matrix2ac_len")
                             (assert))
                            ("2"
                             (expand "P1")
                             (use "dio_matrix2ac_len")
                             (assert))))))
                        ("2"
                         (hide -2 -3 -4 -5 -6)
                         (expand "D1" 1)
                         (lemma "construct_submatrix_matrix2")
                         (inst -1 "C" "D" "m+n")
                         (assert)
                         (assert)
                         (hide 2 3 4)
                         (expand "D" 1)
                         (expand "m" 1)
                         (expand "n")
                         (use "dio_solver_matrix")
                         (assert))))))))
                  ("2"
                   (hide-all-but 1)
                   (expand "m" 1)
                   (expand "n" 1)
                   (expand "A" 1)
                   (rewrite "length_append")
                   (case "length(A_s) = length(ms)")
                   (("1"
                     (assert)
                     (replace -1)
                     (assert)
                     (expand "A_t" 1)
                     (expand "mt" 1)
                     (use "count_elem2_same_len[term]"))
                    ("2"
                     (hide 2)
                     (expand "A_s" 1)
                     (expand "ms" 1)
                     (use "count_elem2_same_len[term]"))))))
                ("3"
                 (expand "D" 1)
                 (use "dio_solver_matrix")
                 (expand "matrix?" 1)
                 (prop)
                 (replace -3)
                 (case "length(car(D)) = length(mt) + length(ms)")
                 (("1" (assert))
                  ("2"
                   (use "matrix_row_len[nat]")
                   (assert)
                   (expand "member" 1)
                   (propax))))
                ("4"
                 (case "m + n > 0")
                 (("1"
                   (expand "const1?" -9)
                   (inst -9 "1")
                   (assert)
                   (expand "empty_col?" 1)
                   (prop)
                   (skeep)
                   (expand "get_col_i" -1)
                   (expand "member" -1)
                   (propax))
                  ("2"
                   (case "m > 0")
                   (("1" (assert))
                    ("2"
                     (hide-all-but 1)
                     (expand "m")
                     (expand "mt")
                     (rewrite "count_elem2_cor")
                     (use "count_elem_len_gt0[term]")
                     (assert)
                     (prop)
                     (("1"
                       (use "count_elem_len[term]")
                       (assert)
                       (assert)
                       (expand "length" 1)
                       (propax))
                      ("2"
                       (rewrite "get_args_len")
                       (rewrite "num_arg_ge1"))))))))))
              ("2"
               (expand "subset?" 1)
               (skeep)
               (use "supset_dom_correct2")
               (expand "subset?" -1)
               (inst -1 "x")
               (assert)
               (replace -4 -1 :dir rl)
               (use "construct_sub_mem_dom")
               (assert)
               (replace -1)
               (hide -1)
               (rewrite "mem_list2set" :dir rl)
               (expand "member" 1)
               (expand "difference" 1)
               (prop)
               (("1"
                 (rewrite "mem_list2set" :dir rl)
                 (expand "V1" 1)
                 (reveal -5)
                 (replace -1)
                 (use "dio_matrix2ac_new_vars")
                 (assert)
                 (assert)
                 (hide 2)
                 (rewrite "member_append"))
                ("2"
                 (rewrite "mem_list2set" :dir rl)
                 (expand "V" -1)
                 (use "from_min2max_mem2[nat]")
                 (assert)
                 (expand "V" -1)
                 (use "select_greater_lt[nat]")
                 (assert))))
              ("3"
               (expand "subset?" 1)
               (skeep)
               (rewrite "mem_list2set" :dir rl)
               (replace -3 -1 :dir rl)
               (use "construct_sub_vars_img")
               (assert)
               (expand "subset?" -1)
               (inst -1 "x")
               (assert)
               (expand "A_del_t" -1)
               (rewrite "vars_count_elem2")
               (rewrite "vars_get_args")
               (use "vars_subs_t")
               (expand "subset?" -1)
               (inst -1 "x")
               (assert)
               (expand "member" -1)
               (expand "union" -1)
               (hide -2)
               (expand "V1" 1)
               (hide -9 -10 -8)
               (reveal -28 -30)
               (use "dio_matrix2ac_new_vars")
               (assert)
               (assert)
               (hide 2)
               (rewrite "member_append")
               (flatten)
               (prop)
               (("1"
                 (reveal -31)
                 (expand "subset?" -1)
                 (inst -1 "x")
                 (assert)
                 (rewrite "mem_list2set" :dir rl))
                ("2"
                 (expand "subset?" -3)
                 (inst -3 "x")
                 (split -3)
                 (("1" (rewrite "mem_list2set" :dir rl))
                  ("2"
                   (expand "vars" 1)
                   (expand ("member" "union") 1)
                   (assert))))))
              ("4"
               (use "construct_sub_well_formed")
               (assert)
               (assert)
               (prop)
               (("1"
                 (expand "A_del_t" 1)
                 (use "well_formed_count_elem2")
                 (assert)
                 (use "alm_well_formed_get_args")
                 (assert)
                 (prop)
                 (("1"
                   (use "alm_well_formed_subs")
                   (assert)
                   (reveal -28)
                   (expand "alm_well_formed?" -1)
                   (inst -1 "t")
                   (assert)
                   (expand "member" 1)
                   (propax))
                  ("2"
                   (reveal -11)
                   (expand "is_ac_sym?" -1)
                   (flatten)
                   (lemma "term_ac_app_eta")
                   (inst -1 "t")
                   (replace -3 :dir rl)
                   (replace -1 1 :dir rl)
                   (rewrite "subs_ac")
                   (expand "is_ac_sym?" 1)
                   (propax))))
                ("2"
                 (reveal -5 -15)
                 (replace -2)
                 (expand "C1")
                 (use "construct_submatrix_coef_len")
                 (assert)
                 (assert)
                 (expand "l" -8)
                 (propax))
                ("3"
                 (expand "C1" 1)
                 (expand "D1" 1)
                 (use "construct_submatrix_no_zero_col")
                 (assert)
                 (assert)
                 (expand "l" -6)
                 (propax))))))
            ("2"
             (rewrite "unifies?_equiv")
             (skolem 1 "unif_pair")
             (prop)
             (expand "unifies?" 1)
             (name-replace "ti" "unif_pair`1")
             (name-replace "ti_" "unif_pair`2")
             (hide -4 -7 -8)
             (rewrite "subs_append2")
             (rewrite "subs_append2")
             (case "subs(lam1)(subs(del)(ti)) = subs(del)(ti)")
             (("1"
               (replace -1)
               (case "subs(lam1)(subs(del)(ti_)) = subs(lam1)(ti_)")
               (("1"
                 (replace -1)
                 (use "perm_args_ac_well_formed")
                 (assert)
                 (case "well_formed?(subs(del)(ti))")
                 (("1"
                   (assert)
                   (case "well_formed?(subs(lam1)(ti_))")
                   (("1"
                     (assert)
                     (hide 2)
                     (rewrite "perm?_equiv_same_count?")
                     (expand "same_count?" 1)
                     (skeep)
                     (rewrite "count" 1 :dir rl)
                     (rewrite "count" 1 :dir rl)
                     (rewrite "count" 1 :dir rl)
                     (rewrite "count" 1)
                     (case "EXISTS t: member(t, A_del_t) AND equal?(Del)(x, t)")
                     (("1"
                       (skolem -1 "Aj")
                       (prop)
                       (lemma "count_eq3")
                       (inst -1 "f" "x" "Aj" "subs(del)(ti)")
                       (assert)
                       (replace -1)
                       (hide -1)
                       (lemma "count_eq3")
                       (inst -1 "f" "x" "Aj" "subs(lam1)(ti_)")
                       (assert)
                       (replace -1)
                       (hide -1)
                       (rewrite "member_nth2")
                       (skolem -1 "j")
                       (reveal -21)
                       (inst -1 "j")
                       (prop)
                       (("1"
                         (rewrite "map_nth_rw")
                         (replace -2 :dir rl)
                         (rewrite "member_nth2")
                         (skolem -8 "i")
                         (lemma "dio_matrix2ac_mem_lhs_nth")
                         (inst -1 "A" "D1" "f" "i" "vars2avoid")
                         (assert)
                         (replace -12)
                         (case "i < length(A)")
                         (("1"
                           (assert)
                           (replace -10 :dir rl)
                           (reveal -11)
                           (replace -1)
                           (lemma "count_vec_nth")
                           (inst -1 "del_A" "f" "i" "Aj")
                           (prop)
                           (("1"
                             (expand "del_A" -1 2)
                             (rewrite "subs_map" :dir rl)
                             (rewrite "map_nth_rw")
                             (("1"
                               (expand "A" -4)
                               (replace -4 :dir rl)
                               (replace -1 :dir rl)
                               (hide -1)
                               (replace -4)
                               (lemma
                                "construct_submatrix_linear_comb")
                               (inst -1 "C" "D" "j" "m+n")
                               (assert)
                               (prop)
                               (("1"
                                 (reveal -15 -16)
                                 (replace -1)
                                 (replace -2)
                                 (replace -3)
                                 (hide -3)
                                 (lemma "get_linear_comb_nth")
                                 (inst -1 "nth(C1, j)" "D1" "i" "m+n")
                                 (assert)
                                 (case
                                  "matrix?(D1, m + n) AND length(nth(C1, j)) = length(D1)")
                                 (("1"
                                   (flatten)
                                   (assert)
                                   (prop)
                                   (("1"
                                     (replace -1)
                                     (hide
                                      -1
                                      -3
                                      -4
                                      -5
                                      -6
                                      -7
                                      -8
                                      -9
                                      -12
                                      -13
                                      -14
                                      -15)
                                     (lemma "count_subs_subset")
                                     (name-replace
                                      "Z0"
                                      "select_greater[nat](vars2avoid)")
                                     (name-replace "l1" "length(D1)")
                                     (hide -1)
                                     (inst
                                      -2
                                      "var_lst(from_min2max[nat](Z0 + 1, Z0 + l1))"
                                      "_"
                                      "_"
                                      "_"
                                      "_")
                                     (name-replace
                                      "new_var_lst"
                                      "var_lst(from_min2max[nat](Z0 + 1, Z0 + l1))")
                                     (inst -2 "f" "Aj" "lam1" "ti_")
                                     (assert)
                                     (prop)
                                     (("1"
                                       (replace -1)
                                       (hide -1)
                                       (rewrite "count_coef1")
                                       (lemma
                                        "dio_matrix2ac_count_coef")
                                       (name-replace "V" "vars2avoid")
                                       (inst -1 "A" "D1" "f" "i" "V")
                                       (assert)
                                       (case "length(A) = m + n")
                                       (("1"
                                         (replace -1)
                                         (assert)
                                         (replace -3)
                                         (replace -10)
                                         (reveal -5 -7)
                                         (replace -2)
                                         (replace -1)
                                         (expand "ti_" 1)
                                         (replace -9)
                                         (replace -4)
                                         (hide -4)
                                         (lemma
                                          "construct_sub_count_nth")
                                         (hide -8)
                                         (inst
                                          -1
                                          "A_del_t"
                                          "C1"
                                          "D1"
                                          "f"
                                          "j"
                                          "V")
                                         (assert)
                                         (replace -9)
                                         (replace -5)
                                         (expand "l1" -2)
                                         (replace -2)
                                         (prop)
                                         (("1"
                                           (replace -7 :dir rl)
                                           (replace -1)
                                           (rewrite "dot_product_sym"))
                                          ("2"
                                           (hide 2)
                                           (hide -1 -2 -3 -4 -6)
                                           (reveal -42 -52)
                                           (replace -2)
                                           (replace -1 :dir rl)
                                           (expand "C1" 1)
                                           (use
                                            "construct_submatrix_coef_len")
                                           (assert)
                                           (expand "l" -9)
                                           (assert))
                                          ("3"
                                           (hide -1 -2 2)
                                           (lemma
                                            "construct_submatrix_no_zero_col")
                                           (inst -1 "C" "D")
                                           (assert)
                                           (expand "C1" 1)
                                           (expand "D1" 1)
                                           (assert)
                                           (expand "l" -9)
                                           (propax))
                                          ("4"
                                           (hide -1 2)
                                           (expand "A_del_t" 1)
                                           (use
                                            "count_elem2_dif_elem[term]"))
                                          ("5"
                                           (hide 2 -1 -2 -3)
                                           (expand "A_del_t" 1)
                                           (rewrite
                                            "no_pair_ac_count_elem2")
                                           (use "get_args_no_pair_ac"))
                                          ("6"
                                           (hide 2 -1 -2 -3)
                                           (expand "subset?" 1)
                                           (skolem 1 "x1")
                                           (prop)
                                           (rewrite
                                            "mem_list2set"
                                            :dir
                                            rl)
                                           (expand "A_del_t" -1)
                                           (rewrite "vars_count_elem2")
                                           (rewrite "vars_get_args")
                                           (use "vars_subs_t")
                                           (expand "subset?" -1)
                                           (inst -1 "x1")
                                           (prop)
                                           (expand
                                            ("member" "union")
                                            -1)
                                           (reveal -59 -60)
                                           (expand "V" 1)
                                           (prop)
                                           (("1"
                                             (expand "subset?" -2)
                                             (inst -2 "x1")
                                             (assert)
                                             (rewrite
                                              "mem_list2set"
                                              :dir
                                              rl))
                                            ("2"
                                             (expand "subset?" -3)
                                             (inst -3 "x1")
                                             (prop)
                                             (("1"
                                               (rewrite
                                                "mem_list2set"
                                                :dir
                                                rl))
                                              ("2"
                                               (expand "vars" 1)
                                               (expand
                                                ("member" "union")
                                                1)
                                               (prop))))))))
                                        ("2"
                                         (hide -1 2 -2)
                                         (expand "m" 1)
                                         (expand "n" 1)
                                         (expand "A" 1)
                                         (rewrite "length_append" 1)
                                         (case
                                          "length(A_s) = length(ms)")
                                         (("1"
                                           (assert)
                                           (replace -1)
                                           (assert)
                                           (expand "mt" 1)
                                           (expand "A_t" 1)
                                           (use
                                            "count_elem2_same_len[term]"))
                                          ("2"
                                           (hide 2)
                                           (expand "A_s" 1)
                                           (expand "ms" 1 1)
                                           (use
                                            "count_elem2_same_len[term]"))))))
                                      ("2"
                                       (hide 2)
                                       (expand "subset_lst?" 1)
                                       (skolem 1 "ti_j")
                                       (prop)
                                       (lemma
                                        "dio_matrix2ac_mem_rhs_get_args")
                                       (inst?)
                                       (inst -1 "ti_j" "ti_")
                                       (assert)
                                       (case "length(A) = m + n")
                                       (("1"
                                         (assert)
                                         (prop)
                                         (("1"
                                           (rewrite
                                            "mem_list2set"
                                            :dir
                                            rl)
                                           (replace -5)
                                           (expand "new_var_lst" 1)
                                           (expand "l1" 1)
                                           (rewrite "var_lst_mem")
                                           (assert))
                                          ("2"
                                           (replace -10)
                                           (expand "rhs" 1)
                                           (rewrite "sec_proj_mem")
                                           (inst 1 "unif_pair")
                                           (assert)
                                           (expand "ti_")
                                           (propax))))
                                        ("2"
                                         (hide -1)
                                         (expand "A" 1)
                                         (hide-all-but 1)
                                         (rewrite "length_append")
                                         (expand "A_s" 1)
                                         (expand "A_t" 1)
                                         (expand "m" 1)
                                         (expand "n" 1)
                                         (expand "ms" 1)
                                         (use
                                          "count_elem2_same_len[term]")
                                         (replace -1)
                                         (assert)
                                         (hide -1)
                                         (expand "mt" 1)
                                         (use
                                          "count_elem2_same_len[term]"))))
                                      ("3"
                                       (hide 2)
                                       (expand "new_var_lst" 1)
                                       (rewrite
                                        "var_lst_dif_elem"
                                        :dir
                                        rl)
                                       (rewrite
                                        "dif_elem_from_min2max"))))
                                    ("2"
                                     (hide
                                      -1
                                      -2
                                      -3
                                      -4
                                      -5
                                      -11
                                      -12
                                      -13
                                      -14)
                                     (hide 2)
                                     (expand "A" -1)
                                     (rewrite "length_append")
                                     (case
                                      "length(A_t) = m AND length(A_s) = n")
                                     (("1" (assert) (flatten) (assert))
                                      ("2"
                                       (hide-all-but 1)
                                       (prop)
                                       (("1"
                                         (expand "m" 1)
                                         (expand "A_t" 1)
                                         (expand "mt" 1)
                                         (use
                                          "count_elem2_same_len[term]"))
                                        ("2"
                                         (expand "n" 1)
                                         (expand "A_s" 1)
                                         (expand "ms" 1)
                                         (use
                                          "count_elem2_same_len[term]"))))))))
                                  ("2"
                                   (hide -1 -10 -11 -12 -13 2 -7 -6)
                                   (prop)
                                   (("1"
                                     (expand "D1" 1)
                                     (lemma
                                      "construct_submatrix_matrix2")
                                     (inst -1 "C" "D" "m+n")
                                     (assert)
                                     (assert)
                                     (expand ("D" "m" "n"))
                                     (use "dio_solver_matrix")
                                     (assert))
                                    ("2"
                                     (use "matrix_nth[nat]")
                                     (assert)
                                     (prop)
                                     (("1"
                                       (expand "l" -11)
                                       (lemma
                                        "construct_submatrix_matrix")
                                       (inst -1 "C" "D")
                                       (assert)
                                       (assert))
                                      ("2"
                                       (typepred "j")
                                       (lemma
                                        "construct_submatrix_coef_len")
                                       (inst -1 "C" "D")
                                       (assert)
                                       (expand "l" -13)
                                       (assert)
                                       (replace -3)
                                       (replace -1)
                                       (reveal -28)
                                       (replace -1)
                                       (expand "k" 1)
                                       (propax))))))))
                                ("2"
                                 (hide-all-but 1)
                                 (expand ("D" "m" "n"))
                                 (use "dio_solver_matrix")
                                 (assert))
                                ("3" (expand "l" -15) (propax))
                                ("4"
                                 (hide -4 -5 -6 -7 -8 -9 2 -10)
                                 (reveal -24)
                                 (replace -1)
                                 (expand "k" 1)
                                 (typepred "j")
                                 (propax))))
                              ("2" (expand "A" -3) (propax))))
                            ("2"
                             (expand "del_A" 1)
                             (rewrite "subs_len")
                             (expand "A" -2)
                             (propax))))
                          ("2"
                           (hide -1)
                           (typepred "i")
                           (replace -12 -1 :dir rl)
                           (lemma "dio_matrix2ac_len")
                           (inst -1 "A" "D1" "f" "vars2avoid")
                           (assert))))
                        ("2" (typepred "j") (expand "k" 1) (propax))))
                      ("2"
                       (case "count(x, subs(del)(ti), f) = 0")
                       (("1"
                         (replace -1)
                         (hide -1)
                         (expand "count" 2)
                         (lemma "count0_eq[term]")
                         (inst -1 "equal?(Del)"
                          "get_args(f)(subs(lam1)(ti_))" "x")
                         (assert)
                         (skolem -1 "x1")
                         (prop)
                         (hide 2)
                         (lemma
                          "construct_sub_mem_get_args_dio_matrix2ac_sol")
                         (inst -1 "A" "A_del_t" "C1" "D1" "f" "x1"
                          "ti_" "vars2avoid")
                         (assert)
                         (replace -9)
                         (replace -11)
                         (case "length(A) = m+n")
                         (("1"
                           (assert)
                           (replace -1)
                           (prop)
                           (("1" (inst 1 "x1") (assert))
                            ("2"
                             (hide-all-but 1)
                             (case "m > 0")
                             (("1" (assert))
                              ("2"
                               (hide 2)
                               (expand "m" 1)
                               (expand "mt" 1)
                               (rewrite "count_elem2_cor")
                               (use "count_elem_len_gt0[term]")
                               (assert)
                               (prop)
                               (("1"
                                 (use "count_elem_len[term]")
                                 (assert)
                                 (assert)
                                 (expand "length" 1)
                                 (propax))
                                ("2"
                                 (rewrite "get_args_len")
                                 (use "num_arg_ge1"))))))
                            ("3"
                             (hide -4 -5 -6 -7 -8 -1 -2)
                             (expand "D1" 1)
                             (lemma "construct_submatrix_matrix2")
                             (inst -1 "C" "D" "m+n")
                             (assert)
                             (assert)
                             (expand "D" 1)
                             (expand "m" 1)
                             (expand "n")
                             (use "dio_solver_matrix")
                             (assert))
                            ("4"
                             (hide -4 -5 -6 -7 2)
                             (expand "subset?" 1)
                             (skolem 1 "y")
                             (prop)
                             (expand "A_del_t" -1)
                             (rewrite "vars_count_elem2")
                             (rewrite "vars_get_args")
                             (use "vars_subs_t")
                             (expand "subset?" -1)
                             (inst -1 "y")
                             (assert)
                             (expand ("member" "union") -1)
                             (prop)
                             (("1"
                               (reveal -36)
                               (expand "subset?" -1)
                               (inst -1 "y")
                               (assert))
                              ("2"
                               (reveal -37)
                               (expand "subset?" -1)
                               (inst -1 "y")
                               (assert)
                               (expand "vars" 1)
                               (expand ("member" "union") 1)
                               (propax))))
                            ("5"
                             (reveal -13)
                             (hide -4 -5 -6 -7 -8 -9 -10)
                             (expand "k" -1)
                             (expand "C1")
                             (lemma "construct_submatrix_coef_len")
                             (inst -1 "C" "D")
                             (assert)
                             (assert)
                             (expand "l" -6)
                             (propax))
                            ("6"
                             (lemma "construct_submatrix_no_zero_col")
                             (inst -1 "C" "D")
                             (assert)
                             (expand "C1" 1)
                             (expand "D1" 1)
                             (assert)
                             (expand "l" -12)
                             (propax))
                            ("7"
                             (expand "A_del_t" 1)
                             (use "no_pair_ac_count_elem2")
                             (replace -1)
                             (use "get_args_no_pair_ac"))
                            ("8"
                             (expand "rhs" 1)
                             (rewrite "sec_proj_mem")
                             (inst 1 "unif_pair")
                             (assert)
                             (expand "ti_")
                             (propax))))
                          ("2"
                           (hide -1 -4 -5 -6 -7)
                           (expand "A" 1)
                           (rewrite "length_append" 1)
                           (case "length(A_t) = m AND length(A_s) = n")
                           (("1" (flatten) (assert))
                            ("2"
                             (hide 2)
                             (prop)
                             (("1"
                               (hide-all-but 1)
                               (expand "m" 1)
                               (expand "A_t" 1)
                               (expand "mt" 1)
                               (use "count_elem2_same_len[term]"))
                              ("2"
                               (hide-all-but 1)
                               (expand "n" 1)
                               (expand "A_s" 1)
                               (expand "ms" 1)
                               (use
                                "count_elem2_same_len[term]"))))))))
                        ("2"
                         (hide 3)
                         (expand "count" 1)
                         (lemma "count0_eq[term]")
                         (inst -1 "equal?(Del)"
                          "get_args(f)(subs(del)(ti))" "x")
                         (assert)
                         (skolem -1 "Aj")
                         (prop)
                         (lemma "dio_matrix2ac_mem_lhs")
                         (inst?)
                         (inst -1 "ti")
                         (assert)
                         (replace -11)
                         (prop)
                         (("1"
                           (expand "A")
                           (rewrite "member_append" -1)
                           (lemma "mem_get_args_subs4")
                           (prop)
                           (("1"
                             (inst -2 "f" "Aj" "del" "t" "ti")
                             (assert)
                             (expand "A_t" -1)
                             (use "count_elem2_mem[term]")
                             (assert)
                             (lemma "count_elem2_mem2[term]")
                             (inst -1 "equal?(Del)"
                              "get_args(f)(subs(del)(t))" "Aj")
                             (assert)
                             (skolem -1 "Aj1")
                             (prop)
                             (expand "A_del_t" 2)
                             (inst 2 "Aj1")
                             (assert)
                             (hide-all-but (-1 -7 2))
                             (lemma "equal?_trans")
                             (inst -1 "x" "Aj" "Aj1")
                             (assert))
                            ("2"
                             (expand "A_s" -1)
                             (use "count_elem2_mem[term]")
                             (assert)
                             (hide -2)
                             (inst -2 "f" "Aj" "del" "s" "ti")
                             (assert)
                             (lemma "member_ac_count_elem2")
                             (inst -1 "get_args(f)(subs(del)(t))"
                              "get_args(f)(subs(del)(s))" "Aj")
                             (assert)
                             (prop)
                             (("1"
                               (expand "member_ac" -1)
                               (skolem -1 "Aj1")
                               (flatten)
                               (inst 2 "Aj1")
                               (expand "A_del_t")
                               (assert)
                               (hide-all-but (-1 -6 2))
                               (lemma "equal?_trans")
                               (inst -1 "x" "Aj" "Aj1")
                               (assert))
                              ("2"
                               (inst 1 "Aj")
                               (assert)
                               (use "equal?_ref"))))))
                          ("2"
                           (expand "lhs" 1)
                           (rewrite "first_proj_mem" 1)
                           (inst 1 "unif_pair")
                           (assert)
                           (expand "ti")
                           (propax))))))))
                    ("2"
                     (hide 2)
                     (use "well_formed_subs")
                     (assert)
                     (hide 2 3)
                     (prop)
                     (("1"
                       (replace -5 1 :dir rl)
                       (use "construct_sub_well_formed")
                       (assert)
                       (assert)
                       (hide 2)
                       (prop)
                       (("1"
                         (expand "A_del_t" 1)
                         (use "well_formed_count_elem2")
                         (assert)
                         (hide 2)
                         (use "alm_well_formed_get_args")
                         (assert)
                         (hide 2)
                         (prop)
                         (("1"
                           (use "alm_well_formed_subs")
                           (assert)
                           (reveal -35)
                           (expand "alm_well_formed?" -1)
                           (inst -1 "t")
                           (expand "member" -1)
                           (propax))
                          ("2"
                           (reveal -18)
                           (hide-all-but (-1 1))
                           (expand "is_ac_sym?")
                           (flatten)
                           (use "term_ac_app_eta")
                           (replace -3 :dir rl)
                           (use "subs_ac")
                           (replace -2 1 :dir rl)
                           (replace -1)
                           (assert))))
                        ("2"
                         (hide -2 -3 -4 -1 -5)
                         (reveal -15 -16 -17)
                         (replace -1 :dir rl)
                         (lemma "construct_submatrix_coef_len")
                         (inst -1 "C" "D")
                         (assert)
                         (expand "k" -4)
                         (assert)
                         (expand "l" -6)
                         (propax))
                        ("3"
                         (expand "C1" 1)
                         (expand "D1" 1)
                         (use "construct_submatrix_no_zero_col")
                         (assert)
                         (assert)
                         (expand "l" -8)
                         (propax))))
                      ("2"
                       (use "dio_matrix2ac_mem_rhs_well_formed")
                       (assert)
                       (assert)
                       (hide 2)
                       (prop)
                       (("1"
                         (expand "A" 1)
                         (rewrite "length_append" 1)
                         (case "length(A_s) = n AND length(A_t) = m")
                         (("1" (flatten) (assert))
                          ("2"
                           (hide 2)
                           (prop)
                           (("1"
                             (expand "n" 1)
                             (expand "A_s" 1)
                             (expand "ms" 1)
                             (use "count_elem2_same_len[term]"))
                            ("2"
                             (expand "m" 1)
                             (expand "A_t" 1)
                             (expand "mt" 1)
                             (use "count_elem2_same_len[term]"))))))
                        ("2"
                         (expand "A" 1)
                         (rewrite "length_append" 1)
                         (case "length(A_s) > 0")
                         (("1" (assert))
                          ("2"
                           (hide 2)
                           (expand "A_s" 1)
                           (rewrite "count_elem2_cor")
                           (use "count_elem_len_gt0[term]")
                           (assert)
                           (assert)
                           (rewrite "get_args_len")
                           (use "num_arg_ge1"))))
                        ("3"
                         (expand "A" 1)
                         (rewrite "length_append" 1)
                         (case "length(A_s) = n AND length(A_t) = m")
                         (("1"
                           (flatten)
                           (assert)
                           (replace -1)
                           (replace -2)
                           (lemma "construct_submatrix_matrix2")
                           (inst -1 "C" "D" "n+m")
                           (expand "D1" 1)
                           (assert)
                           (assert)
                           (expand "D" 1)
                           (expand "m" 1)
                           (expand "n" 1)
                           (use "dio_solver_matrix")
                           (assert))
                          ("2"
                           (hide 2)
                           (prop)
                           (("1"
                             (expand "n" 1)
                             (expand "A_s" 1)
                             (expand "ms" 1)
                             (use "count_elem2_same_len[term]"))
                            ("2"
                             (expand "m" 1)
                             (expand "A_t" 1)
                             (expand "mt" 1)
                             (use "count_elem2_same_len[term]"))))))
                        ("4"
                         (replace -7)
                         (expand "rhs" 1)
                         (rewrite "sec_proj_mem")
                         (inst 1 "unif_pair")
                         (assert)
                         (expand "ti_")
                         (propax))
                        ("5"
                         (expand "A" 1)
                         (reveal -33)
                         (rewrite "well_formed_args")
                         (skolem 1 "t1")
                         (prop)
                         (rewrite "member_append" -2)
                         (prop)
                         (("1"
                           (case "well_formed?(A_t)")
                           (("1"
                             (rewrite "well_formed_args")
                             (inst -1 "t1")
                             (assert))
                            ("2"
                             (expand "A_t" 1)
                             (use "well_formed_count_elem2")
                             (assert)
                             (hide 2 3)
                             (use "alm_well_formed_get_args")
                             (assert)
                             (reveal -35)
                             (expand "alm_well_formed?" -1)
                             (inst -1 "t")
                             (assert)
                             (expand "member" 1)
                             (propax))))
                          ("2"
                           (case "well_formed?(A_s)")
                           (("1"
                             (rewrite "well_formed_args")
                             (inst -1 "t1")
                             (assert))
                            ("2"
                             (expand "A_s" 1)
                             (use "well_formed_count_elem2")
                             (assert)
                             (use "alm_well_formed_get_args")
                             (assert)
                             (expand "alm_well_formed?" -2)
                             (inst -2 "s")
                             (expand "member" -2)
                             (propax))))))))))))
                  ("2"
                   (hide 2)
                   (use "well_formed_subs")
                   (assert)
                   (use "dio_matrix2ac_mem_lhs")
                   (assert)
                   (prop)
                   (("1"
                     (reveal -33)
                     (expand "A" -2)
                     (rewrite "member_append" -2)
                     (prop)
                     (("1"
                       (case "well_formed?(A_t)")
                       (("1"
                         (rewrite "well_formed_args")
                         (inst -1 "ti")
                         (assert))
                        ("2"
                         (expand "A_t" 1)
                         (use "well_formed_count_elem2")
                         (assert)
                         (use "alm_well_formed_get_args")
                         (assert)
                         (expand "alm_well_formed?" -2)
                         (inst -2 "t")
                         (expand "member" -2)
                         (propax))))
                      ("2"
                       (case "well_formed?(A_s)")
                       (("1"
                         (rewrite "well_formed_args")
                         (inst -1 "ti")
                         (assert))
                        ("2"
                         (expand "A_s" 1)
                         (use "well_formed_count_elem2")
                         (assert)
                         (use "alm_well_formed_get_args")
                         (assert)
                         (expand "alm_well_formed?" -2)
                         (inst -2 "s")
                         (expand "member" -2)
                         (propax))))))
                    ("2"
                     (replace -6)
                     (expand "lhs" 1)
                     (rewrite "first_proj_mem")
                     (inst 1 "unif_pair")
                     (assert)
                     (expand "ti" 1)
                     (propax))))))
                ("2"
                 (hide 2)
                 (lemma "subs_no_effect_t")
                 (inst -1 "del" "ti_")
                 (assert)
                 (hide 2)
                 (expand "disjoint?" 1)
                 (expand "empty?" 1)
                 (skeep)
                 (expand "member" -1)
                 (expand "intersection" -1)
                 (prop)
                 (reveal -25)
                 (expand "subset?" -1)
                 (inst -1 "x")
                 (assert)
                 (rewrite "mem_list2set" :dir rl)
                 (hide -2)
                 (lemma "dio_matrix2ac_mem_var_rhs")
                 (inst?)
                 (inst -1 "ti_")
                 (assert)
                 (prop)
                 (("1"
                   (expand "subset?" -1)
                   (inst -1 "x")
                   (assert)
                   (rewrite "mem_list2set" :dir rl)
                   (use "from_min2max_mem2[nat]")
                   (assert)
                   (lemma "select_greater_lt[nat]")
                   (inst -1 "vars2avoid" "x")
                   (assert))
                  ("2"
                   (replace -7)
                   (expand "rhs" 1)
                   (rewrite "sec_proj_mem")
                   (inst 1 "unif_pair")
                   (assert)
                   (expand "ti_")
                   (propax))))))
              ("2"
               (hide 2)
               (lemma "subs_no_effect_t")
               (inst -1 "lam1" "subs(del)(ti)")
               (assert)
               (expand "disjoint?" 1)
               (expand "empty?" 1)
               (skeep)
               (expand ("member" "intersection") -1)
               (prop)
               (case "NOT member(x, vars2avoid)")
               (("1"
                 (use "vars_subs_t")
                 (expand "subset?" -1)
                 (inst -1 "x")
                 (assert)
                 (expand ("member" "union") -1)
                 (prop)
                 (("1"
                   (reveal -28)
                   (expand "subset?" -1)
                   (inst -1 "x")
                   (assert)
                   (rewrite "mem_list2set"))
                  ("2"
                   (use "dio_matrix2ac_mem_lhs")
                   (assert)
                   (replace -8)
                   (prop)
                   (("1"
                     (reveal -31)
                     (expand "subset?" -1)
                     (inst -1 "x")
                     (rewrite "mem_list2set" :dir rl)
                     (expand "A" -1)
                     (rewrite "member_append")
                     (expand "vars" 1)
                     (expand ("member" "union") 1)
                     (prop)
                     (("1"
                       (expand "A_t" -1)
                       (use "vars_get_args")
                       (replace -1 :dir rl)
                       (hide -1)
                       (use "vars_count_elem2")
                       (replace -1 :dir rl)
                       (rewrite "vars_args" 1)
                       (inst 1 "ti")
                       (assert))
                      ("2"
                       (expand "A_s")
                       (hide 1)
                       (use "vars_get_args")
                       (replace -1 :dir rl)
                       (hide -1)
                       (use "vars_count_elem2")
                       (replace -1 :dir rl)
                       (rewrite "vars_args" 1)
                       (inst 1 "ti")
                       (assert))))
                    ("2"
                     (replace -7 1 :dir rl)
                     (replace -7)
                     (expand "lhs" 1)
                     (rewrite "first_proj_mem")
                     (inst 1 "unif_pair")
                     (assert)
                     (expand "ti" 1)
                     (propax))))))
                ("2"
                 (use "construct_sub_mem_dom_cor")
                 (assert)
                 (expand "lam1" -3)
                 (assert))))))))
          ("2"
           (expand "const1?" 1)
           (skolem 1 "j")
           (flatten)
           (name-replace "tj" "nth(A, j-1)")
           (("1"
             (case "EXISTS t: member_ac(t, A_del_t) AND count(t, subs(del)(tj), f) > 0")
             (("1"
               (skolem -1 "Ai")
               (hide -14 -15 -16 -17 -18 -19)
               (prop)
               (expand "member_ac" -1)
               (skolem -1 "Ai_")
               (prop)
               (rewrite "member_nth2")
               (skolem -2 "i")
               (hide -8 -9 -10 -11)
               (reveal -12)
               (case "count(Ai_, subs(del)(tj), f) > 0")
               (("1"
                 (hide -5)
                 (inst -2 "i")
                 (case "i < k")
                 (("1"
                   (prop)
                   (rewrite "map_nth_rw")
                   (replace -5 :dir rl)
                   (lemma "count_vec_nth")
                   (inst -1 "del_A" "f" "j-1" "Ai_")
                   (("1"
                     (case "length(A_t) = m AND length(A_s) = n")
                     (("1"
                       (flatten)
                       (prop)
                       (("1"
                         (hide -15 -16)
                         (expand "del_A" -1 2)
                         (rewrite "subs_map" :dir rl)
                         (rewrite "map_nth_rw")
                         (("1"
                           (expand "A" -9)
                           (replace -9)
                           (lemma "construct_submatrix_linear_comb")
                           (inst -1 "C" "D" "i" "n+m")
                           (assert)
                           (case "matrix?(D, m+n)")
                           (("1"
                             (assert)
                             (expand "l" -15)
                             (assert)
                             (replace -2)
                             (reveal -8 -9)
                             (replace -1)
                             (replace -2)
                             (hide -4)
                             (replace -7)
                             (lemma "get_linear_comb_nth")
                             (inst -1 "nth(C1, i)" "D1" "j-1" "m+n")
                             (case "matrix?(D1, m+n)")
                             (("1"
                               (assert)
                               (prop)
                               (("1"
                                 (replace -1)
                                 (replace -6)
                                 (hide -1 -12 -13 -14 -15 -16)
                                 (use "empty_col_get_repeat_lst")
                                 (assert)
                                 (replace -1)
                                 (replace -6 :dir rl)
                                 (use "dot_product_get_repeat_lst02")
                                 (assert))
                                ("2"
                                 (lemma "construct_submatrix_matrix")
                                 (inst -1 "C" "D")
                                 (assert)
                                 (replace -3)
                                 (replace -4)
                                 (use "matrix_nth[nat]")
                                 (assert)
                                 (hide 2)
                                 (lemma "construct_submatrix_coef_len")
                                 (inst -1 "C" "D")
                                 (assert))))
                              ("2"
                               (hide -1)
                               (lemma "construct_submatrix_matrix2")
                               (inst -1 "C" "D" "m+n")
                               (assert))))
                            ("2"
                             (hide -1)
                             (expand "D" 1)
                             (expand "m" 1)
                             (expand "n" 1)
                             (use "dio_solver_matrix")
                             (assert))))
                          ("2" (rewrite "length_append") (assert))))
                        ("2"
                         (expand "del_A" 1)
                         (rewrite "subs_len")
                         (rewrite "length_append")
                         (assert))))
                      ("2"
                       (hide-all-but 1)
                       (expand "m" 1)
                       (expand "n" 1)
                       (prop)
                       (("1"
                         (expand "A_t" 1)
                         (expand "mt" 1)
                         (use "count_elem2_same_len[term]"))
                        ("2"
                         (expand "A_s" 1)
                         (expand "ms" 1 1)
                         (use "count_elem2_same_len[term]"))))))
                    ("2" (assert))))
                  ("2"
                   (hide -2)
                   (typepred "i")
                   (expand "k" 1)
                   (propax))))
                ("2"
                 (hide -1)
                 (expand "count")
                 (lemma "count_eq[term]")
                 (inst -1 "equal?(G)" "_" "Ai" "Ai_")
                 (inst?)
                 (assert))))
              ("2"
               (inst 1 "select(f, subs(del)(tj))(1)")
               (prop)
               (("1"
                 (hide -12 -13 -14 -15 -16 -17 -18)
                 (expand "A_del_t" 1)
                 (lemma "member_ac_count_elem2")
                 (name-replace "tj1" "select(f, subs(del)(tj))(1)")
                 (expand "A" -2)
                 (case "length(A_t) = m AND length(A_s) = n")
                 (("1"
                   (flatten)
                   (rewrite "nth_append" -4)
                   (lift-if)
                   (prop)
                   (("1"
                     (inst -5 "get_args(f)(subs(del)(t))"
                      "get_args(f)(subs(del)(t))" "tj1")
                     (use "perm?_ref")
                     (assert)
                     (inst 1 "tj1")
                     (prop)
                     (("1"
                       (hide 2)
                       (lemma "mem_get_args_subs4")
                       (inst -1 "f" "tj1" "del" "t" "tj")
                       (assert)
                       (prop)
                       (("1"
                         (lemma "member_nth[term]")
                         (inst -1 "j-1" "A_t")
                         (assert)
                         (replace -4)
                         (expand "A_t" -1)
                         (use "count_elem2_mem[term]")
                         (assert))
                        ("2"
                         (expand "tj1" 1)
                         (use "get_args_mem_select1"))))
                      ("2" (use "equal?_ref"))))
                    ("2"
                     (replace -2)
                     (reveal -5)
                     (inst -5 "get_args(f)(subs(del)(t))"
                      "get_args(f)(subs(del)(s))" "tj1")
                     (assert)
                     (inst 2 "tj1")
                     (prop)
                     (("1"
                       (hide 3 -1)
                       (lemma "mem_get_args_subs4")
                       (inst -1 "f" "tj1" "del" "s" "tj")
                       (assert)
                       (prop)
                       (("1"
                         (lemma "member_nth[term]")
                         (inst -1 "-1 -m + j" "A_s")
                         (assert)
                         (replace -2)
                         (expand "A_s" -1 1)
                         (use "count_elem2_mem[term]")
                         (assert))
                        ("2"
                         (expand "tj1" 1)
                         (use "get_args_mem_select1"))))
                      ("2" (use "equal?_ref"))))))
                  ("2"
                   (hide-all-but 1)
                   (expand "A_t" 1)
                   (expand "A_s" 1)
                   (expand "m" 1)
                   (expand "n")
                   (prop)
                   (("1"
                     (expand "mt" 1)
                     (use "count_elem2_same_len[term]"))
                    ("2"
                     (expand "ms" 1)
                     (use "count_elem2_same_len[term]"))))))
                ("2"
                 (lemma "count_mem[term]")
                 (expand "count" 1)
                 (inst?)
                 (assert)
                 (hide 2)
                 (hide -12 -13 -14 -15 -16 -17 -18)
                 (use "get_args_mem_select1"))))))
            ("2"
             (assert)
             (expand "A" 1)
             (rewrite "length_append")
             (case "length(A_t) = m AND length(A_s) = n")
             (("1" (flatten) (assert))
              ("2"
               (hide 2)
               (hide-all-but 1)
               (prop)
               (("1"
                 (expand "m" 1)
                 (expand "A_t" 1)
                 (expand "mt" 1)
                 (use "count_elem2_same_len[term]"))
                ("2"
                 (expand "n" 1)
                 (expand "A_s" 1)
                 (expand "ms" 1)
                 (use "count_elem2_same_len[term]"))))))))))
        ("2"
         (hide -1)
         (skolem 1 "sol")
         (prop)
         (expand "is_solution?" 1)
         (hide -4 -5)
         (hide -5 -6 -7)
         (rewrite "map_member4")
         (skolem -1 "Ai")
         (flatten)
         (expand "del_A" -2)
         (rewrite "subs_append" -2)
         (rewrite "count_vec_append")
         (replace -2)
         (rewrite "length_append")
         (rewrite "count_vec_len")
         (rewrite "count_vec_len")
         (case "length(A_s) = length(ms) AND length(A_t) = length(mt)")
         (("1"
           (prop)
           (("1"
             (rewrite "subs_map" :dir rl)
             (rewrite "subs_map" :dir rl)
             (rewrite "map_length")
             (rewrite "map_length")
             (assert))
            ("2"
             (use "split_append[nat]")
             (rewrite "count_vec_len")
             (rewrite "subs_map" -1 :dir rl)
             (rewrite "map_length")
             (replace -3)
             (replace -1)
             (assert)
             (rewrite "subs_map")
             (hide -1 -5 -6)
             (name-replace "A_del_s"
              "count_elem2(get_args(f)(subs(del)(s)), equal?(Del))`1")
             (("1"
               (name-replace "m_del_s"
                "count_elem2(get_args(f)(subs(del)(s)), equal?(Del))`2")
               (lemma "count_subs_count_elem")
               (inst -1 "f" "Ai" "del" "t")
               (assert)
               (rewrite "count_elem2_cor" :dir rl)
               (expand "A_t")
               (expand "mt" 1)
               (replace -1 :dir rl)
               (hide -1)
               (lemma "count_subs_count_elem")
               (inst -1 "f" "Ai" "del" "s")
               (assert)
               (rewrite "count_elem2_cor" :dir rl)
               (expand "A_s" 1)
               (expand "ms" 1)
               (replace -1 :dir rl)
               (hide -1)
               (rewrite "perm?_equiv_same_count?")
               (expand "same_count?" -7)
               (inst -7 "Ai")
               (expand "count" 1)
               (propax))
              ("2" (rewrite "equal?_equiv"))))))
          ("2"
           (hide 2)
           (hide -2)
           (prop)
           (("1"
             (expand "A_s")
             (expand "ms" 1)
             (rewrite "count_elem2_same_len"))
            ("2"
             (expand "A_t" 1)
             (expand "mt")
             (rewrite "count_elem2_same_len"))))))))
      ("2"
       (hide-all-but 1)
       (expand "ms")
       (rewrite "count_elem2_cor")
       (rewrite "count_elem_tcc_solver"))
      ("3"
       (hide-all-but 1)
       (expand "mt" 1)
       (rewrite "count_elem2_cor")
       (rewrite "count_elem_tcc_solver"))))
    ("2" (rewrite "equal?_equiv"))))
  ("2" (rewrite "equal?_equiv" 1))))

